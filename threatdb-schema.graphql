""""""
directive @hasInverse(field: String!) on FIELD_DEFINITION

""""""
directive @lambdaOnMutate(add: Boolean, update: Boolean, delete: Boolean) on OBJECT | INTERFACE

""""""
directive @cacheControl(maxAge: Int!) on QUERY

""""""
directive @generate(query: GenerateQueryParams, mutation: GenerateMutationParams, subscription: Boolean) on OBJECT | INTERFACE

""""""
directive @dgraph(type: String, pred: String) on OBJECT | INTERFACE | FIELD_DEFINITION

""""""
directive @custom(http: CustomHTTP, dql: String) on FIELD_DEFINITION

""""""
directive @remoteResponse(name: String) on FIELD_DEFINITION

""""""
directive @auth(password: AuthRule, query: AuthRule, add: AuthRule, update: AuthRule, delete: AuthRule) on OBJECT | INTERFACE

""""""
directive @remote on OBJECT | INTERFACE | UNION | INPUT_OBJECT | ENUM

""""""
directive @cascade(fields: [String]) on FIELD

""""""
directive @lambda on FIELD_DEFINITION

""""""
directive @search(by: [DgraphIndex!]) on FIELD_DEFINITION

""""""
directive @id on FIELD_DEFINITION

""""""
directive @secret(field: String!, pred: String) on OBJECT | INTERFACE

""""""
directive @withSubscription on OBJECT | INTERFACE | FIELD_DEFINITION

""""""
input IntFilter {
  """"""
  eq: Int

  """"""
  in: [Int]

  """"""
  le: Int

  """"""
  lt: Int

  """"""
  ge: Int

  """"""
  gt: Int

  """"""
  between: IntRange
}

""""""
type BomServiceDataAggregateResult {
  """"""
  count: Int

  """"""
  dataMin: String

  """"""
  dataMax: String
}

""""""
type DeleteVulnerabilityVersionChangesPayload {
  """"""
  vulnerabilityVersionChanges(filter: VulnerabilityVersionChangesFilter, order: VulnerabilityVersionChangesOrder, first: Int, offset: Int): [VulnerabilityVersionChanges]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateScanResultPayload {
  """"""
  scanResult(filter: ScanResultFilter, order: ScanResultOrder, first: Int, offset: Int): [ScanResult]

  """"""
  numUids: Int
}

""""""
enum EnvironmentHasFilter {
  """"""
  id

  """"""
  name

  """"""
  description

  """"""
  tags

  """"""
  url

  """"""
  users

  """"""
  teams
}

""""""
input ApplicationRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """Name of the application"""
  name: String

  """Description"""
  description: String

  """"""
  environment: EnvironmentRef

  """"""
  version: ApplicationVersionRef

  """URL of the repository"""
  repoUrl: String

  """URL to the issues tracking system such as GitHub issues or Jira"""
  issuesUrl: String

  """URL to the CI environment"""
  ciUrl: String

  """URL to the CD environment"""
  cdUrl: String

  """URL to the change management system used"""
  changeManagementUrl: String

  """
  List of programming languages used in the application, configurations and containers
  """
  languages: [String]

  """List of frameworks and SDKs"""
  frameworks: [String]

  """List of custom classification"""
  classification: [String]

  """List of tags"""
  tags: [String]

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """"""
  teams: [TeamRef]

  """Is this application disabled?"""
  disabled: Boolean
}

""""""
input ComponentLicenseOrder {
  """"""
  asc: ComponentLicenseOrderable

  """"""
  desc: ComponentLicenseOrderable

  """"""
  then: ComponentLicenseOrder
}

""""""
enum BomOrderable {
  """"""
  serialNumber
}

""""""
input AddVulnerabilityVersionChangesInput {
  """"""
  at: String!

  """"""
  status: VulnerabilityVersionStatusEnum!
}

""""""
input VulnerabilityAnalysisRef {
  """State such as exploitable"""
  state: String

  """Details for the state"""
  detail: String
}

"""Vulnerability type"""
type Vulnerability {
  """Unique reference within a BoM"""
  bomRef: String!

  """ID such as CVE or GHSA id"""
  id: String!

  """Source"""
  source(filter: VulnerabilitySourceFilter): VulnerabilitySource

  """List of ratings"""
  ratings(filter: VulnerabilityRatingFilter, order: VulnerabilityRatingOrder, first: Int, offset: Int): [VulnerabilityRating]

  """Default severity"""
  severity: Severity!

  """Default CVSS scores"""
  cvss_score: Float!

  """List of CWE"""
  cwes: [Int]

  """Description"""
  description: String

  """Recommendation"""
  recommendation: String

  """List of advisories"""
  advisories(filter: VulnerabilityAdvisoryFilter, order: VulnerabilityAdvisoryOrder, first: Int, offset: Int): [VulnerabilityAdvisory]

  """Link to the analysis from an automated tool"""
  analysis(filter: VulnerabilityAnalysisFilter): VulnerabilityAnalysis

  """List of components affected"""
  affects(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """Affected version"""
  version: String!

  """Fix version"""
  fix_version: String

  """List of properties"""
  properties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """Vulnerability detail"""
  detail(filter: VulnerabilityDetailFilter): VulnerabilityDetail

  """"""
  ratingsAggregate(filter: VulnerabilityRatingFilter): VulnerabilityRatingAggregateResult

  """"""
  advisoriesAggregate(filter: VulnerabilityAdvisoryFilter): VulnerabilityAdvisoryAggregateResult

  """"""
  affectsAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  propertiesAggregate(filter: PropertiesFilter): PropertiesAggregateResult
}

""""""
input NearFilter {
  """"""
  distance: Float!

  """"""
  coordinate: PointRef!
}

""""""
type Polygon {
  """"""
  coordinates: [PointList!]!
}

""""""
type UpdateVulnerabilityVersionStatusPayload {
  """"""
  vulnerabilityVersionStatus(filter: VulnerabilityVersionStatusFilter, order: VulnerabilityVersionStatusOrder, first: Int, offset: Int): [VulnerabilityVersionStatus]

  """"""
  numUids: Int
}

""""""
input VulnerabilityAnalysisOrder {
  """"""
  asc: VulnerabilityAnalysisOrderable

  """"""
  desc: VulnerabilityAnalysisOrderable

  """"""
  then: VulnerabilityAnalysisOrder
}

""""""
input VulnerabilitySourcePatch {
  """Name such as NVD, GitHub"""
  name: String

  """URL"""
  url: String
}

""""""
input PolygonGeoFilter {
  """"""
  near: NearFilter

  """"""
  within: WithinFilter

  """"""
  contains: ContainsFilter

  """"""
  intersects: IntersectsFilter
}

""""""
type AddComponentPayload {
  """"""
  component(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """"""
  numUids: Int
}

""""""
type DeleteBomMetadataPayload {
  """"""
  bomMetadata(filter: BomMetadataFilter, order: BomMetadataOrder, first: Int, offset: Int): [BomMetadata]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateVulnerabilitySourcePayload {
  """"""
  vulnerabilitySource(filter: VulnerabilitySourceFilter, order: VulnerabilitySourceOrder, first: Int, offset: Int): [VulnerabilitySource]

  """"""
  numUids: Int
}

""""""
enum BomServiceHasFilter {
  """"""
  bomRef

  """"""
  group

  """"""
  name

  """"""
  version

  """"""
  description

  """"""
  endpoints

  """"""
  authenticated

  """"""
  xTrustBoundary

  """"""
  data

  """"""
  licenses

  """"""
  services

  """"""
  properties
}

""""""
enum VulnerabilityRatingHasFilter {
  """"""
  severity

  """"""
  score

  """"""
  method
}

""""""
input ComponentFilter {
  """"""
  group: StringRegExpFilter_StringTermFilter

  """"""
  name: StringRegExpFilter_StringTermFilter

  """"""
  description: StringFullTextFilter_StringTermFilter

  """"""
  scope: StringExactFilter

  """"""
  version: StringRegExpFilter_StringTermFilter

  """"""
  purl: StringHashFilter_StringRegExpFilter_StringTermFilter

  """"""
  has: [ComponentHasFilter]

  """"""
  and: [ComponentFilter]

  """"""
  or: [ComponentFilter]

  """"""
  not: ComponentFilter
}

""""""
input UpdateVulnerabilitySourceInput {
  """"""
  filter: VulnerabilitySourceFilter!

  """"""
  set: VulnerabilitySourcePatch

  """"""
  remove: VulnerabilitySourcePatch
}

""""""
input UpdateVulnerabilityVersionStatusInput {
  """"""
  filter: VulnerabilityVersionStatusFilter!

  """"""
  set: VulnerabilityVersionStatusPatch

  """"""
  remove: VulnerabilityVersionStatusPatch
}

"""Roles assigned to a user"""
type UserRole {
  """Unique ID such as UUID or ULID"""
  id: String!

  """User"""
  user(filter: UserFilter): User!

  """Team"""
  team(filter: TeamFilter): Team!

  """Role string. Example: administrator, developer, security"""
  role: String!

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """Is this role disabled?"""
  disabled: Boolean
}

""""""
type DeleteApplicationVersionPayload {
  """"""
  applicationVersion(filter: ApplicationVersionFilter, order: ApplicationVersionOrder, first: Int, offset: Int): [ApplicationVersion]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateComponentLicensePayload {
  """"""
  componentLicense(filter: ComponentLicenseFilter, order: ComponentLicenseOrder, first: Int, offset: Int): [ComponentLicense]

  """"""
  numUids: Int
}

""""""
type VulnerabilityDetailAggregateResult {
  """"""
  count: Int

  """"""
  titleMin: String

  """"""
  titleMax: String

  """"""
  summaryMin: String

  """"""
  summaryMax: String

  """"""
  datePublicMin: DateTime

  """"""
  datePublicMax: DateTime

  """"""
  collectionURLMin: String

  """"""
  collectionURLMax: String

  """"""
  defaultStatusMin: String

  """"""
  defaultStatusMax: String

  """"""
  sourceMin: String

  """"""
  sourceMax: String
}

""""""
input EnvironmentFilter {
  """"""
  id: StringHashFilter

  """"""
  name: StringTermFilter

  """"""
  description: StringFullTextFilter_StringTermFilter

  """"""
  has: [EnvironmentHasFilter]

  """"""
  and: [EnvironmentFilter]

  """"""
  or: [EnvironmentFilter]

  """"""
  not: EnvironmentFilter
}

""""""
type PointList {
  """"""
  points: [Point!]!
}

""""""
input GenerateMutationParams {
  """"""
  add: Boolean

  """"""
  update: Boolean

  """"""
  delete: Boolean
}

""""""
type EnvironmentAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  descriptionMin: String

  """"""
  descriptionMax: String

  """"""
  urlMin: String

  """"""
  urlMax: String
}

""""""
type UserRoleAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  roleMin: String

  """"""
  roleMax: String

  """"""
  createdMin: DateTime

  """"""
  createdMax: DateTime

  """"""
  modifiedMin: DateTime

  """"""
  modifiedMax: DateTime
}

""""""
enum ScanHasFilter {
  """"""
  id

  """"""
  isScheduled

  """"""
  invokedBy

  """"""
  created

  """"""
  validUntil

  """"""
  applications

  """"""
  tags

  """"""
  result

  """"""
  url
}

""""""
enum ScanOrderable {
  """"""
  id

  """"""
  created

  """"""
  validUntil

  """"""
  url
}

""""""
input BomServicePatch {
  """Unique Reference in this BoM"""
  bomRef: String

  """Group"""
  group: String

  """Service name"""
  name: String

  """Service version"""
  version: String

  """Description"""
  description: String

  """List of endpoints"""
  endpoints: [String]

  """Boolean to indicate if this endpoint is authenticated"""
  authenticated: Boolean

  """Boolean to indicate if this service is cross boundary"""
  xTrustBoundary: Boolean

  """"""
  data: [BomServiceDataRef]

  """"""
  licenses: [ComponentLicenseRef]

  """"""
  services: [BomServiceRef]

  """"""
  properties: [PropertiesRef]
}

""""""
input PropertiesRef {
  """Property name"""
  name: String

  """Property value"""
  value: String
}

""""""
input UpdateScanResultInput {
  """"""
  filter: ScanResultFilter!

  """"""
  set: ScanResultPatch

  """"""
  remove: ScanResultPatch
}

""""""
input UpdateVulnerabilityVersionChangesInput {
  """"""
  filter: VulnerabilityVersionChangesFilter!

  """"""
  set: VulnerabilityVersionChangesPatch

  """"""
  remove: VulnerabilityVersionChangesPatch
}

""""""
input UserRoleOrder {
  """"""
  asc: UserRoleOrderable

  """"""
  desc: UserRoleOrderable

  """"""
  then: UserRoleOrder
}

""""""
input VulnerabilityAnalysisPatch {
  """State such as exploitable"""
  state: String

  """Details for the state"""
  detail: String
}

""""""
type DeleteVulnerabilityAdvisoryPayload {
  """"""
  vulnerabilityAdvisory(filter: VulnerabilityAdvisoryFilter, order: VulnerabilityAdvisoryOrder, first: Int, offset: Int): [VulnerabilityAdvisory]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
enum ComponentLicenseOrderable {
  """"""
  id

  """"""
  name

  """"""
  text

  """"""
  url

  """"""
  expression
}

""""""
input BomServiceFilter {
  """"""
  group: StringRegExpFilter_StringTermFilter

  """"""
  name: StringRegExpFilter_StringTermFilter

  """"""
  version: StringRegExpFilter_StringTermFilter

  """"""
  description: StringFullTextFilter_StringTermFilter

  """"""
  endpoints: StringTermFilter

  """"""
  has: [BomServiceHasFilter]

  """"""
  and: [BomServiceFilter]

  """"""
  or: [BomServiceFilter]

  """"""
  not: BomServiceFilter
}

""""""
input Int64Range {
  """"""
  min: Int64!

  """"""
  max: Int64!
}

""""""
type VulnerabilityVersionStatusAggregateResult {
  """"""
  count: Int

  """"""
  versionMin: String

  """"""
  versionMax: String

  """"""
  versionTypeMin: String

  """"""
  versionTypeMax: String

  """"""
  repoMin: String

  """"""
  repoMax: String

  """"""
  lessThanOrEqualMin: String

  """"""
  lessThanOrEqualMax: String

  """"""
  lessThanMin: String

  """"""
  lessThanMax: String
}

""""""
enum TeamHasFilter {
  """"""
  id

  """"""
  name

  """"""
  description

  """"""
  tags

  """"""
  users

  """"""
  applications

  """"""
  created

  """"""
  modified

  """"""
  disabled
}

""""""
input ApplicationOrder {
  """"""
  asc: ApplicationOrderable

  """"""
  desc: ApplicationOrderable

  """"""
  then: ApplicationOrder
}

""""""
input ComponentLicenseRef {
  """Unique ID"""
  id: String

  """License name"""
  name: String

  """License text"""
  text: String

  """License URL"""
  url: String

  """License Expression"""
  expression: String
}

""""""
input EnvironmentPatch {
  """Name of the environment such as dev, stage, preprod"""
  name: String

  """Description of the environment for search"""
  description: String

  """List of tags"""
  tags: [String]

  """Direct url to the environment"""
  url: String

  """"""
  users: [UserRef]

  """"""
  teams: [TeamRef]
}

""""""
input PropertiesPatch {
  """Property name"""
  name: String

  """Property value"""
  value: String
}

""""""
input UpdateBomServiceDataInput {
  """"""
  filter: BomServiceDataFilter!

  """"""
  set: BomServiceDataPatch

  """"""
  remove: BomServiceDataPatch
}

""""""
input VulnerabilityVersionStatusPatch {
  """Version string"""
  version: String

  """Version type such as semver"""
  versionType: String

  """Repository"""
  repo: String

  """"""
  lessThanOrEqual: String

  """"""
  lessThan: String

  """"""
  changes: [VulnerabilityVersionChangesRef]

  """Status"""
  status: VulnerabilityVersionStatusEnum
}

"""Represents the license of a component"""
type ComponentLicense {
  """Unique ID"""
  id: String

  """License name"""
  name: String

  """License text"""
  text: String

  """License URL"""
  url: String

  """License Expression"""
  expression: String
}

"""
The Int64 scalar type represents a signed 64‐bit numeric non‐fractional value.
Int64 can represent values in range [-(2^63),(2^63 - 1)].
"""
scalar Int64

""""""
type Point {
  """"""
  longitude: Float!

  """"""
  latitude: Float!
}

""""""
type DeleteBomServicePayload {
  """"""
  bomService(filter: BomServiceFilter, order: BomServiceOrder, first: Int, offset: Int): [BomService]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateBomServiceDataPayload {
  """"""
  bomServiceData(filter: BomServiceDataFilter, order: BomServiceDataOrder, first: Int, offset: Int): [BomServiceData]

  """"""
  numUids: Int
}

""""""
enum PropertiesHasFilter {
  """"""
  name

  """"""
  value
}

""""""
enum TeamOrderable {
  """"""
  id

  """"""
  name

  """"""
  description

  """"""
  created

  """"""
  modified
}

""""""
enum VulnerabilityVersionChangesHasFilter {
  """"""
  at

  """"""
  status
}

""""""
input ComponentLicensePatch {
  """Unique ID"""
  id: String

  """License name"""
  name: String

  """License text"""
  text: String

  """License URL"""
  url: String

  """License Expression"""
  expression: String
}

""""""
input UpdateEnvironmentInput {
  """"""
  filter: EnvironmentFilter!

  """"""
  set: EnvironmentPatch

  """"""
  remove: EnvironmentPatch
}

""""""
input VulnerabilitySourceFilter {
  """"""
  name: StringTermFilter

  """"""
  has: [VulnerabilitySourceHasFilter]

  """"""
  and: [VulnerabilitySourceFilter]

  """"""
  or: [VulnerabilitySourceFilter]

  """"""
  not: VulnerabilitySourceFilter
}

""""""
input VulnerabilityVersionStatusOrder {
  """"""
  asc: VulnerabilityVersionStatusOrderable

  """"""
  desc: VulnerabilityVersionStatusOrderable

  """"""
  then: VulnerabilityVersionStatusOrder
}

""""""
type AddApplicationPayload {
  """"""
  application(filter: ApplicationFilter, order: ApplicationOrder, first: Int, offset: Int): [Application]

  """"""
  numUids: Int
}

""""""
type AddBomServicePayload {
  """"""
  bomService(filter: BomServiceFilter, order: BomServiceOrder, first: Int, offset: Int): [BomService]

  """"""
  numUids: Int
}

""""""
type DeleteVulnerabilityPayload {
  """"""
  vulnerability(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateVulnerabilityAdvisoryPayload {
  """"""
  vulnerabilityAdvisory(filter: VulnerabilityAdvisoryFilter, order: VulnerabilityAdvisoryOrder, first: Int, offset: Int): [VulnerabilityAdvisory]

  """"""
  numUids: Int
}

""""""
enum BomMetadataOrderable {
  """"""
  timestamp
}

""""""
enum BomServiceDataHasFilter {
  """"""
  data

  """"""
  flow

  """"""
  classification
}

""""""
input AddComponentInput {
  """Is this a root component?"""
  isRoot: Boolean

  """Unique BOM Reference"""
  bomRef: String!

  """Group"""
  group: String!

  """Name of the component"""
  name: String!

  """Description"""
  description: String

  """Component type"""
  ctype: String

  """Sub path"""
  subPath: String

  """Repository URL"""
  repoUrl: String

  """Download URL"""
  downloadUrl: String

  """Publisher"""
  publisher: String

  """"""
  licenses: [ComponentLicenseRef]

  """Component scope such as required, optional, excluded"""
  scope: String

  """Version"""
  version: String!

  """Package URL"""
  purl: String!

  """"""
  vulnerabilities: [VulnerabilityRef]

  """"""
  properties: [PropertiesRef]

  """"""
  dependency: [ComponentRef]

  """"""
  appearsIn: [BomRef]
}

""""""
input UpdateTeamInput {
  """"""
  filter: TeamFilter!

  """"""
  set: TeamPatch

  """"""
  remove: TeamPatch
}

""""""
input PointRef {
  """"""
  longitude: Float!

  """"""
  latitude: Float!
}

""""""
input StringRegExpFilter {
  """"""
  regexp: String
}

""""""
type UpdateVulnerabilityAnalysisPayload {
  """"""
  vulnerabilityAnalysis(filter: VulnerabilityAnalysisFilter, order: VulnerabilityAnalysisOrder, first: Int, offset: Int): [VulnerabilityAnalysis]

  """"""
  numUids: Int
}

"""Vulnerability source"""
type VulnerabilitySource {
  """Name such as NVD, GitHub"""
  name: String

  """URL"""
  url: String
}

""""""
input AuthRule {
  """"""
  and: [AuthRule]

  """"""
  or: [AuthRule]

  """"""
  not: AuthRule

  """"""
  rule: String
}

""""""
input CustomHTTP {
  """"""
  url: String!

  """"""
  method: HTTPMethod!

  """"""
  body: String

  """"""
  graphql: String

  """"""
  mode: Mode

  """"""
  forwardHeaders: [String!]

  """"""
  secretHeaders: [String!]

  """"""
  introspectionHeaders: [String!]

  """"""
  skipIntrospection: Boolean
}

""""""
enum VulnerabilitySourceOrderable {
  """"""
  name

  """"""
  url
}

""""""
input UpdateUserRoleInput {
  """"""
  filter: UserRoleFilter!

  """"""
  set: UserRolePatch

  """"""
  remove: UserRolePatch
}

"""Vulnerability version and its status"""
type VulnerabilityVersionStatus {
  """Version string"""
  version: String!

  """Version type such as semver"""
  versionType: String

  """Repository"""
  repo: String

  """"""
  lessThanOrEqual: String

  """"""
  lessThan: String

  """List of changes"""
  changes(filter: VulnerabilityVersionChangesFilter, order: VulnerabilityVersionChangesOrder, first: Int, offset: Int): [VulnerabilityVersionChanges]

  """Status"""
  status: VulnerabilityVersionStatusEnum!

  """"""
  changesAggregate(filter: VulnerabilityVersionChangesFilter): VulnerabilityVersionChangesAggregateResult
}

""""""
enum ComponentOrderable {
  """"""
  bomRef

  """"""
  group

  """"""
  name

  """"""
  description

  """"""
  ctype

  """"""
  subPath

  """"""
  repoUrl

  """"""
  downloadUrl

  """"""
  publisher

  """"""
  scope

  """"""
  version

  """"""
  purl
}

""""""
type AddTeamPayload {
  """"""
  team(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """"""
  numUids: Int
}

""""""
type DeleteVulnerabilityAnalysisPayload {
  """"""
  vulnerabilityAnalysis(filter: VulnerabilityAnalysisFilter, order: VulnerabilityAnalysisOrder, first: Int, offset: Int): [VulnerabilityAnalysis]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type VulnerabilityAdvisoryAggregateResult {
  """"""
  count: Int

  """"""
  titleMin: String

  """"""
  titleMax: String

  """"""
  urlMin: String

  """"""
  urlMax: String
}

""""""
enum VulnerabilityRatingOrderable {
  """"""
  score

  """"""
  method
}

""""""
input UpdateVulnerabilityRatingInput {
  """"""
  filter: VulnerabilityRatingFilter!

  """"""
  set: VulnerabilityRatingPatch

  """"""
  remove: VulnerabilityRatingPatch
}

""""""
input VulnerabilityRatingPatch {
  """Severity such as critical, high"""
  severity: Severity

  """Score"""
  score: Float

  """Method used to determine the score"""
  method: String
}

""""""
input StringHashFilter {
  """"""
  eq: String

  """"""
  in: [String]
}

""""""
input TeamOrder {
  """"""
  asc: TeamOrderable

  """"""
  desc: TeamOrderable

  """"""
  then: TeamOrder
}

""""""
input UpdatePropertiesInput {
  """"""
  filter: PropertiesFilter!

  """"""
  set: PropertiesPatch

  """"""
  remove: PropertiesPatch
}

""""""
input UserRolePatch {
  """"""
  user: UserRef

  """"""
  team: TeamRef

  """Role string. Example: administrator, developer, security"""
  role: String

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """Is this role disabled?"""
  disabled: Boolean
}

""""""
type AddVulnerabilityPayload {
  """"""
  vulnerability(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """"""
  numUids: Int
}

""""""
type UpdateApplicationPayload {
  """"""
  application(filter: ApplicationFilter, order: ApplicationOrder, first: Int, offset: Int): [Application]

  """"""
  numUids: Int
}

""""""
type UpdateApplicationVersionPayload {
  """"""
  applicationVersion(filter: ApplicationVersionFilter, order: ApplicationVersionOrder, first: Int, offset: Int): [ApplicationVersion]

  """"""
  numUids: Int
}

""""""
enum ScanResultHasFilter {
  """"""
  id

  """"""
  scan

  """"""
  created

  """"""
  validUntil

  """"""
  bom

  """"""
  components

  """"""
  vulnerabilities

  """"""
  prioritizedComponents

  """"""
  prioritizedVulnerabilities

  """"""
  exploitableComponents

  """"""
  exploitableVulnerabilities

  """"""
  ignoredComponents

  """"""
  ignoredVulnerabilities

  """"""
  url

  """"""
  htmlUrl

  """"""
  csvUrl

  """"""
  pdfUrl
}

""""""
input ScanOrder {
  """"""
  asc: ScanOrderable

  """"""
  desc: ScanOrderable

  """"""
  then: ScanOrder
}

""""""
input ScanResultRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """"""
  scan: ScanRef

  """Creation date"""
  created: DateTime

  """Optional, validity for result before it is considered stale"""
  validUntil: DateTime

  """"""
  bom: [BomRef]

  """"""
  components: [ComponentRef]

  """"""
  vulnerabilities: [VulnerabilityRef]

  """"""
  prioritizedComponents: [ComponentRef]

  """"""
  prioritizedVulnerabilities: [VulnerabilityRef]

  """"""
  exploitableComponents: [ComponentRef]

  """"""
  exploitableVulnerabilities: [VulnerabilityRef]

  """"""
  ignoredComponents: [ComponentRef]

  """"""
  ignoredVulnerabilities: [VulnerabilityRef]

  """Direct url for this scan result"""
  url: String

  """Direct html report url for this scan result"""
  htmlUrl: String

  """Direct csv report url for this scan result"""
  csvUrl: String

  """Direct pdf report url for this scan result"""
  pdfUrl: String
}

""""""
input UpdateBomMetadataInput {
  """"""
  filter: BomMetadataFilter!

  """"""
  set: BomMetadataPatch

  """"""
  remove: BomMetadataPatch
}

""""""
type Mutation {
  """"""
  addUser(input: [AddUserInput!]!, upsert: Boolean): AddUserPayload

  """"""
  updateUser(input: UpdateUserInput!): UpdateUserPayload

  """"""
  deleteUser(filter: UserFilter!): DeleteUserPayload

  """"""
  addTeam(input: [AddTeamInput!]!, upsert: Boolean): AddTeamPayload

  """"""
  updateTeam(input: UpdateTeamInput!): UpdateTeamPayload

  """"""
  deleteTeam(filter: TeamFilter!): DeleteTeamPayload

  """"""
  addUserRole(input: [AddUserRoleInput!]!, upsert: Boolean): AddUserRolePayload

  """"""
  updateUserRole(input: UpdateUserRoleInput!): UpdateUserRolePayload

  """"""
  deleteUserRole(filter: UserRoleFilter!): DeleteUserRolePayload

  """"""
  addScanResult(input: [AddScanResultInput!]!, upsert: Boolean): AddScanResultPayload

  """"""
  updateScanResult(input: UpdateScanResultInput!): UpdateScanResultPayload

  """"""
  deleteScanResult(filter: ScanResultFilter!): DeleteScanResultPayload

  """"""
  addScan(input: [AddScanInput!]!, upsert: Boolean): AddScanPayload

  """"""
  updateScan(input: UpdateScanInput!): UpdateScanPayload

  """"""
  deleteScan(filter: ScanFilter!): DeleteScanPayload

  """"""
  addEnvironment(input: [AddEnvironmentInput!]!, upsert: Boolean): AddEnvironmentPayload

  """"""
  updateEnvironment(input: UpdateEnvironmentInput!): UpdateEnvironmentPayload

  """"""
  deleteEnvironment(filter: EnvironmentFilter!): DeleteEnvironmentPayload

  """"""
  addApplicationVersion(input: [AddApplicationVersionInput!]!): AddApplicationVersionPayload

  """"""
  updateApplicationVersion(input: UpdateApplicationVersionInput!): UpdateApplicationVersionPayload

  """"""
  deleteApplicationVersion(filter: ApplicationVersionFilter!): DeleteApplicationVersionPayload

  """"""
  addApplication(input: [AddApplicationInput!]!, upsert: Boolean): AddApplicationPayload

  """"""
  updateApplication(input: UpdateApplicationInput!): UpdateApplicationPayload

  """"""
  deleteApplication(filter: ApplicationFilter!): DeleteApplicationPayload

  """"""
  addProperties(input: [AddPropertiesInput!]!): AddPropertiesPayload

  """"""
  updateProperties(input: UpdatePropertiesInput!): UpdatePropertiesPayload

  """"""
  deleteProperties(filter: PropertiesFilter!): DeletePropertiesPayload

  """"""
  addBomMetadata(input: [AddBomMetadataInput!]!): AddBomMetadataPayload

  """"""
  updateBomMetadata(input: UpdateBomMetadataInput!): UpdateBomMetadataPayload

  """"""
  deleteBomMetadata(filter: BomMetadataFilter!): DeleteBomMetadataPayload

  """"""
  addComponentLicense(input: [AddComponentLicenseInput!]!): AddComponentLicensePayload

  """"""
  updateComponentLicense(input: UpdateComponentLicenseInput!): UpdateComponentLicensePayload

  """"""
  deleteComponentLicense(filter: ComponentLicenseFilter!): DeleteComponentLicensePayload

  """"""
  addComponent(input: [AddComponentInput!]!, upsert: Boolean): AddComponentPayload

  """"""
  updateComponent(input: UpdateComponentInput!): UpdateComponentPayload

  """"""
  deleteComponent(filter: ComponentFilter!): DeleteComponentPayload

  """"""
  addBomServiceData(input: [AddBomServiceDataInput!]!): AddBomServiceDataPayload

  """"""
  updateBomServiceData(input: UpdateBomServiceDataInput!): UpdateBomServiceDataPayload

  """"""
  deleteBomServiceData(filter: BomServiceDataFilter!): DeleteBomServiceDataPayload

  """"""
  addBomService(input: [AddBomServiceInput!]!): AddBomServicePayload

  """"""
  updateBomService(input: UpdateBomServiceInput!): UpdateBomServicePayload

  """"""
  deleteBomService(filter: BomServiceFilter!): DeleteBomServicePayload

  """"""
  addBom(input: [AddBomInput!]!, upsert: Boolean): AddBomPayload

  """"""
  updateBom(input: UpdateBomInput!): UpdateBomPayload

  """"""
  deleteBom(filter: BomFilter!): DeleteBomPayload

  """"""
  addVulnerabilityVersionChanges(input: [AddVulnerabilityVersionChangesInput!]!): AddVulnerabilityVersionChangesPayload

  """"""
  updateVulnerabilityVersionChanges(input: UpdateVulnerabilityVersionChangesInput!): UpdateVulnerabilityVersionChangesPayload

  """"""
  deleteVulnerabilityVersionChanges(filter: VulnerabilityVersionChangesFilter!): DeleteVulnerabilityVersionChangesPayload

  """"""
  addVulnerabilityVersionStatus(input: [AddVulnerabilityVersionStatusInput!]!): AddVulnerabilityVersionStatusPayload

  """"""
  updateVulnerabilityVersionStatus(input: UpdateVulnerabilityVersionStatusInput!): UpdateVulnerabilityVersionStatusPayload

  """"""
  deleteVulnerabilityVersionStatus(filter: VulnerabilityVersionStatusFilter!): DeleteVulnerabilityVersionStatusPayload

  """"""
  addVulnerabilityDetail(input: [AddVulnerabilityDetailInput!]!): AddVulnerabilityDetailPayload

  """"""
  updateVulnerabilityDetail(input: UpdateVulnerabilityDetailInput!): UpdateVulnerabilityDetailPayload

  """"""
  deleteVulnerabilityDetail(filter: VulnerabilityDetailFilter!): DeleteVulnerabilityDetailPayload

  """"""
  addVulnerabilitySource(input: [AddVulnerabilitySourceInput!]!): AddVulnerabilitySourcePayload

  """"""
  updateVulnerabilitySource(input: UpdateVulnerabilitySourceInput!): UpdateVulnerabilitySourcePayload

  """"""
  deleteVulnerabilitySource(filter: VulnerabilitySourceFilter!): DeleteVulnerabilitySourcePayload

  """"""
  addVulnerabilityAdvisory(input: [AddVulnerabilityAdvisoryInput!]!): AddVulnerabilityAdvisoryPayload

  """"""
  updateVulnerabilityAdvisory(input: UpdateVulnerabilityAdvisoryInput!): UpdateVulnerabilityAdvisoryPayload

  """"""
  deleteVulnerabilityAdvisory(filter: VulnerabilityAdvisoryFilter!): DeleteVulnerabilityAdvisoryPayload

  """"""
  addVulnerabilityRating(input: [AddVulnerabilityRatingInput!]!): AddVulnerabilityRatingPayload

  """"""
  updateVulnerabilityRating(input: UpdateVulnerabilityRatingInput!): UpdateVulnerabilityRatingPayload

  """"""
  deleteVulnerabilityRating(filter: VulnerabilityRatingFilter!): DeleteVulnerabilityRatingPayload

  """"""
  addVulnerabilityAnalysis(input: [AddVulnerabilityAnalysisInput!]!): AddVulnerabilityAnalysisPayload

  """"""
  updateVulnerabilityAnalysis(input: UpdateVulnerabilityAnalysisInput!): UpdateVulnerabilityAnalysisPayload

  """"""
  deleteVulnerabilityAnalysis(filter: VulnerabilityAnalysisFilter!): DeleteVulnerabilityAnalysisPayload

  """"""
  addVulnerability(input: [AddVulnerabilityInput!]!, upsert: Boolean): AddVulnerabilityPayload

  """"""
  updateVulnerability(input: UpdateVulnerabilityInput!): UpdateVulnerabilityPayload

  """"""
  deleteVulnerability(filter: VulnerabilityFilter!): DeleteVulnerabilityPayload
}

""""""
input Int64Filter {
  """"""
  eq: Int64

  """"""
  in: [Int64]

  """"""
  le: Int64

  """"""
  lt: Int64

  """"""
  ge: Int64

  """"""
  gt: Int64

  """"""
  between: Int64Range
}

""""""
type AddUserRolePayload {
  """"""
  userRole(filter: UserRoleFilter, order: UserRoleOrder, first: Int, offset: Int): [UserRole]

  """"""
  numUids: Int
}

""""""
type DeleteApplicationPayload {
  """"""
  application(filter: ApplicationFilter, order: ApplicationOrder, first: Int, offset: Int): [Application]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type DeleteScanPayload {
  """"""
  scan(filter: ScanFilter, order: ScanOrder, first: Int, offset: Int): [Scan]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
input StringHashFilter_StringRegExpFilter_StringTermFilter {
  """"""
  eq: String

  """"""
  in: [String]

  """"""
  regexp: String

  """"""
  allofterms: String

  """"""
  anyofterms: String
}

""""""
input UpdateApplicationInput {
  """"""
  filter: ApplicationFilter!

  """"""
  set: ApplicationPatch

  """"""
  remove: ApplicationPatch
}

""""""
type ApplicationVersionAggregateResult {
  """"""
  count: Int

  """"""
  branchMin: String

  """"""
  branchMax: String

  """"""
  releaseMin: String

  """"""
  releaseMax: String

  """"""
  tagMin: String

  """"""
  tagMax: String

  """"""
  commit_shaMin: String

  """"""
  commit_shaMax: String
}

""""""
input BomOrder {
  """"""
  asc: BomOrderable

  """"""
  desc: BomOrderable

  """"""
  then: BomOrder
}

""""""
input EnvironmentRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """Name of the environment such as dev, stage, preprod"""
  name: String

  """Description of the environment for search"""
  description: String

  """List of tags"""
  tags: [String]

  """Direct url to the environment"""
  url: String

  """"""
  users: [UserRef]

  """"""
  teams: [TeamRef]
}

""""""
input VulnerabilityAnalysisFilter {
  """"""
  state: StringHashFilter_StringTermFilter

  """"""
  detail: StringFullTextFilter_StringTermFilter

  """"""
  has: [VulnerabilityAnalysisHasFilter]

  """"""
  and: [VulnerabilityAnalysisFilter]

  """"""
  or: [VulnerabilityAnalysisFilter]

  """"""
  not: VulnerabilityAnalysisFilter
}

""""""
enum VulnerabilityDetailOrderable {
  """"""
  title

  """"""
  summary

  """"""
  datePublic

  """"""
  collectionURL

  """"""
  defaultStatus

  """"""
  source
}

""""""
input VulnerabilityVersionStatusFilter {
  """"""
  has: [VulnerabilityVersionStatusHasFilter]

  """"""
  and: [VulnerabilityVersionStatusFilter]

  """"""
  or: [VulnerabilityVersionStatusFilter]

  """"""
  not: VulnerabilityVersionStatusFilter
}

"""Component"""
type Component {
  """Is this a root component?"""
  isRoot: Boolean

  """Unique BOM Reference"""
  bomRef: String!

  """Group"""
  group: String!

  """Name of the component"""
  name: String!

  """Description"""
  description: String

  """Component type"""
  ctype: String

  """Sub path"""
  subPath: String

  """Repository URL"""
  repoUrl: String

  """Download URL"""
  downloadUrl: String

  """Publisher"""
  publisher: String

  """List of licenses"""
  licenses(filter: ComponentLicenseFilter, order: ComponentLicenseOrder, first: Int, offset: Int): [ComponentLicense]

  """Component scope such as required, optional, excluded"""
  scope: String

  """Version"""
  version: String!

  """Package URL"""
  purl: String!

  """List of vulnerabilities"""
  vulnerabilities(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """List of properties"""
  properties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """List of dependency"""
  dependency(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """List of BoM this component appears in"""
  appearsIn(filter: BomFilter, order: BomOrder, first: Int, offset: Int): [Bom]

  """"""
  licensesAggregate(filter: ComponentLicenseFilter): ComponentLicenseAggregateResult

  """"""
  vulnerabilitiesAggregate(filter: VulnerabilityFilter): VulnerabilityAggregateResult

  """"""
  propertiesAggregate(filter: PropertiesFilter): PropertiesAggregateResult

  """"""
  dependencyAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  appearsInAggregate(filter: BomFilter): BomAggregateResult
}

"""BoM service"""
type BomServiceData {
  """Data name"""
  data: String

  """Flow of data - inbound, outbound etc"""
  flow: [String]

  """Classification of data"""
  classification: [String]
}

"""Vulnerability version changes"""
type VulnerabilityVersionChanges {
  """"""
  at: String!

  """"""
  status: VulnerabilityVersionStatusEnum!
}

""""""
type AddVulnerabilityAnalysisPayload {
  """"""
  vulnerabilityAnalysis(filter: VulnerabilityAnalysisFilter, order: VulnerabilityAnalysisOrder, first: Int, offset: Int): [VulnerabilityAnalysis]

  """"""
  numUids: Int
}

""""""
input AddComponentLicenseInput {
  """Unique ID"""
  id: String

  """License name"""
  name: String

  """License text"""
  text: String

  """License URL"""
  url: String

  """License Expression"""
  expression: String
}

""""""
input UpdateScanInput {
  """"""
  filter: ScanFilter!

  """"""
  set: ScanPatch

  """"""
  remove: ScanPatch
}

"""Results from a scan"""
type ScanResult {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Scan that created this result"""
  scan(filter: ScanFilter): Scan

  """Creation date"""
  created: DateTime!

  """Optional, validity for result before it is considered stale"""
  validUntil: DateTime

  """List of SBoM used for the scan"""
  bom(filter: BomFilter, order: BomOrder, first: Int, offset: Int): [Bom]

  """List of components scanned"""
  components(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """List of vulnerabilities identified"""
  vulnerabilities(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """List of prioritized components"""
  prioritizedComponents(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """List of prioritized vulnerabilities"""
  prioritizedVulnerabilities(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """List of exploitable components"""
  exploitableComponents(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """List of exploitable vulnerabilities"""
  exploitableVulnerabilities(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """List of ignored components"""
  ignoredComponents(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """List of ignored vulnerabilities"""
  ignoredVulnerabilities(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """Direct url for this scan result"""
  url: String

  """Direct html report url for this scan result"""
  htmlUrl: String

  """Direct csv report url for this scan result"""
  csvUrl: String

  """Direct pdf report url for this scan result"""
  pdfUrl: String

  """"""
  bomAggregate(filter: BomFilter): BomAggregateResult

  """"""
  componentsAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  vulnerabilitiesAggregate(filter: VulnerabilityFilter): VulnerabilityAggregateResult

  """"""
  prioritizedComponentsAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  prioritizedVulnerabilitiesAggregate(filter: VulnerabilityFilter): VulnerabilityAggregateResult

  """"""
  exploitableComponentsAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  exploitableVulnerabilitiesAggregate(filter: VulnerabilityFilter): VulnerabilityAggregateResult

  """"""
  ignoredComponentsAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  ignoredVulnerabilitiesAggregate(filter: VulnerabilityFilter): VulnerabilityAggregateResult
}

""""""
enum Mode {
  """"""
  BATCH

  """"""
  SINGLE
}

""""""
input IntersectsFilter {
  """"""
  polygon: PolygonRef

  """"""
  multiPolygon: MultiPolygonRef
}

""""""
enum VulnerabilityAnalysisHasFilter {
  """"""
  state

  """"""
  detail
}

""""""
input AddTeamInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Team name"""
  name: String!

  """Description of the team"""
  description: String

  """List of tags"""
  tags: [String]

  """"""
  users: [UserRef]

  """"""
  applications: [ApplicationRef]

  """Creation date"""
  created: DateTime!

  """Modified date"""
  modified: DateTime!

  """Is this team disabled?"""
  disabled: Boolean
}

""""""
input BomMetadataOrder {
  """"""
  asc: BomMetadataOrderable

  """"""
  desc: BomMetadataOrderable

  """"""
  then: BomMetadataOrder
}

""""""
input PropertiesOrder {
  """"""
  asc: PropertiesOrderable

  """"""
  desc: PropertiesOrderable

  """"""
  then: PropertiesOrder
}

""""""
input ScanResultFilter {
  """"""
  id: StringHashFilter

  """"""
  created: DateTimeFilter

  """"""
  has: [ScanResultHasFilter]

  """"""
  and: [ScanResultFilter]

  """"""
  or: [ScanResultFilter]

  """"""
  not: ScanResultFilter
}

""""""
input VulnerabilityFilter {
  """"""
  bomRef: StringHashFilter

  """"""
  id: StringHashFilter_StringTermFilter

  """"""
  severity: Severity_hash

  """"""
  cvss_score: FloatFilter

  """"""
  description: StringFullTextFilter

  """"""
  recommendation: StringFullTextFilter

  """"""
  version: StringRegExpFilter_StringTermFilter

  """"""
  fix_version: StringRegExpFilter_StringTermFilter

  """"""
  has: [VulnerabilityHasFilter]

  """"""
  and: [VulnerabilityFilter]

  """"""
  or: [VulnerabilityFilter]

  """"""
  not: VulnerabilityFilter
}

""""""
type AddPropertiesPayload {
  """"""
  properties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """"""
  numUids: Int
}

""""""
type AddVulnerabilityVersionStatusPayload {
  """"""
  vulnerabilityVersionStatus(filter: VulnerabilityVersionStatusFilter, order: VulnerabilityVersionStatusOrder, first: Int, offset: Int): [VulnerabilityVersionStatus]

  """"""
  numUids: Int
}

""""""
type ApplicationAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  descriptionMin: String

  """"""
  descriptionMax: String

  """"""
  repoUrlMin: String

  """"""
  repoUrlMax: String

  """"""
  issuesUrlMin: String

  """"""
  issuesUrlMax: String

  """"""
  ciUrlMin: String

  """"""
  ciUrlMax: String

  """"""
  cdUrlMin: String

  """"""
  cdUrlMax: String

  """"""
  changeManagementUrlMin: String

  """"""
  changeManagementUrlMax: String

  """"""
  createdMin: DateTime

  """"""
  createdMax: DateTime

  """"""
  modifiedMin: DateTime

  """"""
  modifiedMax: DateTime
}

""""""
enum ScanResultOrderable {
  """"""
  id

  """"""
  created

  """"""
  validUntil

  """"""
  url

  """"""
  htmlUrl

  """"""
  csvUrl

  """"""
  pdfUrl
}

""""""
input VulnerabilityAdvisoryOrder {
  """"""
  asc: VulnerabilityAdvisoryOrderable

  """"""
  desc: VulnerabilityAdvisoryOrderable

  """"""
  then: VulnerabilityAdvisoryOrder
}

""""""
input VulnerabilityVersionChangesFilter {
  """"""
  has: [VulnerabilityVersionChangesHasFilter]

  """"""
  and: [VulnerabilityVersionChangesFilter]

  """"""
  or: [VulnerabilityVersionChangesFilter]

  """"""
  not: VulnerabilityVersionChangesFilter
}

""""""
input DateTimeRange {
  """"""
  min: DateTime!

  """"""
  max: DateTime!
}

""""""
type VulnerabilityAggregateResult {
  """"""
  count: Int

  """"""
  bomRefMin: String

  """"""
  bomRefMax: String

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  cvss_scoreMin: Float

  """"""
  cvss_scoreMax: Float

  """"""
  cvss_scoreSum: Float

  """"""
  cvss_scoreAvg: Float

  """"""
  descriptionMin: String

  """"""
  descriptionMax: String

  """"""
  recommendationMin: String

  """"""
  recommendationMax: String

  """"""
  versionMin: String

  """"""
  versionMax: String

  """"""
  fix_versionMin: String

  """"""
  fix_versionMax: String
}

""""""
enum BomServiceOrderable {
  """"""
  bomRef

  """"""
  group

  """"""
  name

  """"""
  version

  """"""
  description
}

""""""
enum UserRoleOrderable {
  """"""
  id

  """"""
  role

  """"""
  created

  """"""
  modified
}

""""""
input AddVulnerabilityRatingInput {
  """Severity such as critical, high"""
  severity: Severity!

  """Score"""
  score: Float!

  """Method used to determine the score"""
  method: String
}

""""""
input StringHashFilter_StringTermFilter {
  """"""
  eq: String

  """"""
  in: [String]

  """"""
  allofterms: String

  """"""
  anyofterms: String
}

""""""
input StringRange {
  """"""
  min: String!

  """"""
  max: String!
}

""""""
type DeleteBomServiceDataPayload {
  """"""
  bomServiceData(filter: BomServiceDataFilter, order: BomServiceDataOrder, first: Int, offset: Int): [BomServiceData]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateBomPayload {
  """"""
  bom(filter: BomFilter, order: BomOrder, first: Int, offset: Int): [Bom]

  """"""
  numUids: Int
}

""""""
type UpdateScanPayload {
  """"""
  scan(filter: ScanFilter, order: ScanOrder, first: Int, offset: Int): [Scan]

  """"""
  numUids: Int
}

""""""
enum VulnerabilityHasFilter {
  """"""
  bomRef

  """"""
  id

  """"""
  source

  """"""
  ratings

  """"""
  severity

  """"""
  cvss_score

  """"""
  cwes

  """"""
  description

  """"""
  recommendation

  """"""
  advisories

  """"""
  analysis

  """"""
  affects

  """"""
  version

  """"""
  fix_version

  """"""
  properties

  """"""
  detail
}

""""""
enum VulnerabilityVersionChangesOrderable {
  """"""
  at
}

""""""
input BomFilter {
  """"""
  serialNumber: StringHashFilter

  """"""
  has: [BomHasFilter]

  """"""
  and: [BomFilter]

  """"""
  or: [BomFilter]

  """"""
  not: BomFilter
}

""""""
input BomServiceDataRef {
  """Data name"""
  data: String

  """Flow of data - inbound, outbound etc"""
  flow: [String]

  """Classification of data"""
  classification: [String]
}

"""BoM Metadata"""
type BomMetadata {
  """Creation Timestamp"""
  timestamp: DateTime!

  """Root component"""
  component(filter: ComponentFilter): Component
}

"""
The DateTime scalar type represents date and time as a string in RFC3339 format.
For example: "1985-04-12T23:20:50.52Z" represents 20 mins 50.52 secs after the 23rd hour of Apr 12th 1985 in UTC.
"""
scalar DateTime

""""""
type DeletePropertiesPayload {
  """"""
  properties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type DeleteTeamPayload {
  """"""
  team(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
enum ApplicationVersionHasFilter {
  """"""
  branch

  """"""
  release

  """"""
  tag

  """"""
  commit_sha
}

""""""
enum ApplicationVersionOrderable {
  """"""
  branch

  """"""
  release

  """"""
  tag

  """"""
  commit_sha
}

""""""
input AddVulnerabilityDetailInput {
  """"""
  vulnerability: VulnerabilityRef!

  """Title"""
  title: String

  """Summary"""
  summary: String

  """Date the vulnerability became public"""
  datePublic: DateTime

  """Collection"""
  collectionURL: String

  """Default status such as affected"""
  defaultStatus: String

  """List of descriptions"""
  descriptions: [String]

  """List of modules affected"""
  modules: [String]

  """List of program files affected"""
  programFiles: [String]

  """List of program routines affected"""
  programRoutines: [String]

  """List of platforms affected"""
  platforms: [String]

  """"""
  versions: [VulnerabilityVersionStatusRef]

  """List of solutions to mitigate the vulnerability"""
  solutions: [String]

  """List of workarounds available"""
  workarounds: [String]

  """List of configurations to mitigate"""
  configurations: [String]

  """List of exploits"""
  exploits: [String]

  """List of timeline"""
  timeline: [String]

  """List of credits"""
  credits: [String]

  """List of references"""
  references: [String]

  """Source of the vulnerability detail such as NVD, GitHub"""
  source: String
}

""""""
input BomServiceOrder {
  """"""
  asc: BomServiceOrderable

  """"""
  desc: BomServiceOrderable

  """"""
  then: BomServiceOrder
}

""""""
type ComponentAggregateResult {
  """"""
  count: Int

  """"""
  bomRefMin: String

  """"""
  bomRefMax: String

  """"""
  groupMin: String

  """"""
  groupMax: String

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  descriptionMin: String

  """"""
  descriptionMax: String

  """"""
  ctypeMin: String

  """"""
  ctypeMax: String

  """"""
  subPathMin: String

  """"""
  subPathMax: String

  """"""
  repoUrlMin: String

  """"""
  repoUrlMax: String

  """"""
  downloadUrlMin: String

  """"""
  downloadUrlMax: String

  """"""
  publisherMin: String

  """"""
  publisherMax: String

  """"""
  scopeMin: String

  """"""
  scopeMax: String

  """"""
  versionMin: String

  """"""
  versionMax: String

  """"""
  purlMin: String

  """"""
  purlMax: String
}

""""""
enum ComponentLicenseHasFilter {
  """"""
  id

  """"""
  name

  """"""
  text

  """"""
  url

  """"""
  expression
}

""""""
input UpdateApplicationVersionInput {
  """"""
  filter: ApplicationVersionFilter!

  """"""
  set: ApplicationVersionPatch

  """"""
  remove: ApplicationVersionPatch
}

""""""
type AddBomMetadataPayload {
  """"""
  bomMetadata(filter: BomMetadataFilter, order: BomMetadataOrder, first: Int, offset: Int): [BomMetadata]

  """"""
  numUids: Int
}

""""""
type AddVulnerabilitySourcePayload {
  """"""
  vulnerabilitySource(filter: VulnerabilitySourceFilter, order: VulnerabilitySourceOrder, first: Int, offset: Int): [VulnerabilitySource]

  """"""
  numUids: Int
}

""""""
type UpdateTeamPayload {
  """"""
  team(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """"""
  numUids: Int
}

""""""
input ScanResultPatch {
  """"""
  scan: ScanRef

  """Creation date"""
  created: DateTime

  """Optional, validity for result before it is considered stale"""
  validUntil: DateTime

  """"""
  bom: [BomRef]

  """"""
  components: [ComponentRef]

  """"""
  vulnerabilities: [VulnerabilityRef]

  """"""
  prioritizedComponents: [ComponentRef]

  """"""
  prioritizedVulnerabilities: [VulnerabilityRef]

  """"""
  exploitableComponents: [ComponentRef]

  """"""
  exploitableVulnerabilities: [VulnerabilityRef]

  """"""
  ignoredComponents: [ComponentRef]

  """"""
  ignoredVulnerabilities: [VulnerabilityRef]

  """Direct url for this scan result"""
  url: String

  """Direct html report url for this scan result"""
  htmlUrl: String

  """Direct csv report url for this scan result"""
  csvUrl: String

  """Direct pdf report url for this scan result"""
  pdfUrl: String
}

""""""
input VulnerabilityAdvisoryPatch {
  """Title"""
  title: String

  """URL to the advisory"""
  url: String
}

""""""
input VulnerabilityRatingFilter {
  """"""
  severity: Severity_hash

  """"""
  score: FloatFilter

  """"""
  has: [VulnerabilityRatingHasFilter]

  """"""
  and: [VulnerabilityRatingFilter]

  """"""
  or: [VulnerabilityRatingFilter]

  """"""
  not: VulnerabilityRatingFilter
}

""""""
input StringFullTextFilter {
  """"""
  alloftext: String

  """"""
  anyoftext: String
}

""""""
type AddComponentLicensePayload {
  """"""
  componentLicense(filter: ComponentLicenseFilter, order: ComponentLicenseOrder, first: Int, offset: Int): [ComponentLicense]

  """"""
  numUids: Int
}

""""""
input AddBomServiceDataInput {
  """Data name"""
  data: String

  """Flow of data - inbound, outbound etc"""
  flow: [String]

  """Classification of data"""
  classification: [String]
}

""""""
input VulnerabilityVersionChangesOrder {
  """"""
  asc: VulnerabilityVersionChangesOrderable

  """"""
  desc: VulnerabilityVersionChangesOrderable

  """"""
  then: VulnerabilityVersionChangesOrder
}

""""""
enum HTTPMethod {
  """"""
  GET

  """"""
  POST

  """"""
  PUT

  """"""
  PATCH

  """"""
  DELETE
}

""""""
type BomAggregateResult {
  """"""
  count: Int

  """"""
  serialNumberMin: String

  """"""
  serialNumberMax: String
}

""""""
input AddUserRoleInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """"""
  user: UserRef!

  """"""
  team: TeamRef!

  """Role string. Example: administrator, developer, security"""
  role: String!

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """Is this role disabled?"""
  disabled: Boolean
}

""""""
enum VulnerabilityOrderable {
  """"""
  bomRef

  """"""
  id

  """"""
  cvss_score

  """"""
  description

  """"""
  recommendation

  """"""
  version

  """"""
  fix_version
}

""""""
input AddBomServiceInput {
  """Unique Reference in this BoM"""
  bomRef: String!

  """Group"""
  group: String!

  """Service name"""
  name: String!

  """Service version"""
  version: String!

  """Description"""
  description: String

  """List of endpoints"""
  endpoints: [String]

  """Boolean to indicate if this endpoint is authenticated"""
  authenticated: Boolean

  """Boolean to indicate if this service is cross boundary"""
  xTrustBoundary: Boolean

  """"""
  data: [BomServiceDataRef]

  """"""
  licenses: [ComponentLicenseRef]

  """"""
  services: [BomServiceRef]

  """"""
  properties: [PropertiesRef]
}

""""""
input ApplicationVersionPatch {
  """Branch name"""
  branch: String

  """Release name"""
  release: String

  """VCS Tag"""
  tag: String

  """VCS Commit Hash"""
  commit_sha: String
}

""""""
input ScanFilter {
  """"""
  id: StringHashFilter

  """"""
  created: DateTimeFilter

  """"""
  has: [ScanHasFilter]

  """"""
  and: [ScanFilter]

  """"""
  or: [ScanFilter]

  """"""
  not: ScanFilter
}

""""""
input StringTermFilter {
  """"""
  allofterms: String

  """"""
  anyofterms: String
}

""""""
type AddBomServiceDataPayload {
  """"""
  bomServiceData(filter: BomServiceDataFilter, order: BomServiceDataOrder, first: Int, offset: Int): [BomServiceData]

  """"""
  numUids: Int
}

""""""
enum ApplicationHasFilter {
  """"""
  id

  """"""
  name

  """"""
  description

  """"""
  environment

  """"""
  version

  """"""
  repoUrl

  """"""
  issuesUrl

  """"""
  ciUrl

  """"""
  cdUrl

  """"""
  changeManagementUrl

  """"""
  languages

  """"""
  frameworks

  """"""
  classification

  """"""
  tags

  """"""
  created

  """"""
  modified

  """"""
  teams

  """"""
  disabled
}

""""""
input ScanPatch {
  """Boolean to represent if this scan was scheduled"""
  isScheduled: Boolean

  """"""
  invokedBy: UserRef

  """Creation date"""
  created: DateTime

  """Optional validity date for this scan"""
  validUntil: DateTime

  """"""
  applications: [ApplicationRef]

  """List of custom tags"""
  tags: [String]

  """"""
  result: ScanResultRef

  """Direct link to the scan"""
  url: String
}

""""""
input TeamPatch {
  """Team name"""
  name: String

  """Description of the team"""
  description: String

  """List of tags"""
  tags: [String]

  """"""
  users: [UserRef]

  """"""
  applications: [ApplicationRef]

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """Is this team disabled?"""
  disabled: Boolean
}

""""""
input UpdateComponentLicenseInput {
  """"""
  filter: ComponentLicenseFilter!

  """"""
  set: ComponentLicensePatch

  """"""
  remove: ComponentLicensePatch
}

"""Application Environment"""
type Environment {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Name of the environment such as dev, stage, preprod"""
  name: String!

  """Description of the environment for search"""
  description: String

  """List of tags"""
  tags: [String]

  """Direct url to the environment"""
  url: String

  """List of users of this environment"""
  users(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]

  """List of teams using this environment"""
  teams(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """"""
  usersAggregate(filter: UserFilter): UserAggregateResult

  """"""
  teamsAggregate(filter: TeamFilter): TeamAggregateResult
}

""""""
type UpdateEnvironmentPayload {
  """"""
  environment(filter: EnvironmentFilter, order: EnvironmentOrder, first: Int, offset: Int): [Environment]

  """"""
  numUids: Int
}

""""""
enum ApplicationOrderable {
  """"""
  id

  """"""
  name

  """"""
  description

  """"""
  repoUrl

  """"""
  issuesUrl

  """"""
  ciUrl

  """"""
  cdUrl

  """"""
  changeManagementUrl

  """"""
  created

  """"""
  modified
}

""""""
input UpdateBomInput {
  """"""
  filter: BomFilter!

  """"""
  set: BomPatch

  """"""
  remove: BomPatch
}

""""""
type AddUserPayload {
  """"""
  user(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]

  """"""
  numUids: Int
}

""""""
enum EnvironmentOrderable {
  """"""
  id

  """"""
  name

  """"""
  description

  """"""
  url
}

""""""
input BomRef {
  """Serial number"""
  serialNumber: String

  """"""
  metadata: BomMetadataRef

  """"""
  components: [ComponentRef!]

  """"""
  services: [BomServiceRef]

  """"""
  application: ApplicationRef

  """"""
  scan: ScanRef

  """"""
  vulnerabilities: [VulnerabilityRef]
}

""""""
input ComponentPatch {
  """Is this a root component?"""
  isRoot: Boolean

  """Unique BOM Reference"""
  bomRef: String

  """Group"""
  group: String

  """Name of the component"""
  name: String

  """Description"""
  description: String

  """Component type"""
  ctype: String

  """Sub path"""
  subPath: String

  """Repository URL"""
  repoUrl: String

  """Download URL"""
  downloadUrl: String

  """Publisher"""
  publisher: String

  """"""
  licenses: [ComponentLicenseRef]

  """Component scope such as required, optional, excluded"""
  scope: String

  """Version"""
  version: String

  """"""
  vulnerabilities: [VulnerabilityRef]

  """"""
  properties: [PropertiesRef]

  """"""
  dependency: [ComponentRef]

  """"""
  appearsIn: [BomRef]
}

""""""
input ComponentRef {
  """Is this a root component?"""
  isRoot: Boolean

  """Unique BOM Reference"""
  bomRef: String

  """Group"""
  group: String

  """Name of the component"""
  name: String

  """Description"""
  description: String

  """Component type"""
  ctype: String

  """Sub path"""
  subPath: String

  """Repository URL"""
  repoUrl: String

  """Download URL"""
  downloadUrl: String

  """Publisher"""
  publisher: String

  """"""
  licenses: [ComponentLicenseRef]

  """Component scope such as required, optional, excluded"""
  scope: String

  """Version"""
  version: String

  """Package URL"""
  purl: String

  """"""
  vulnerabilities: [VulnerabilityRef]

  """"""
  properties: [PropertiesRef]

  """"""
  dependency: [ComponentRef]

  """"""
  appearsIn: [BomRef]
}

""""""
input FloatFilter {
  """"""
  eq: Float

  """"""
  in: [Float]

  """"""
  le: Float

  """"""
  lt: Float

  """"""
  ge: Float

  """"""
  gt: Float

  """"""
  between: FloatRange
}

""""""
type DeleteUserRolePayload {
  """"""
  userRole(filter: UserRoleFilter, order: UserRoleOrder, first: Int, offset: Int): [UserRole]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type PropertiesAggregateResult {
  """"""
  count: Int

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  valueMin: String

  """"""
  valueMax: String
}

""""""
type VulnerabilitySourceAggregateResult {
  """"""
  count: Int

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  urlMin: String

  """"""
  urlMax: String
}

""""""
input AddBomMetadataInput {
  """Creation Timestamp"""
  timestamp: DateTime!

  """"""
  component: ComponentRef
}

""""""
input AddEnvironmentInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Name of the environment such as dev, stage, preprod"""
  name: String!

  """Description of the environment for search"""
  description: String

  """List of tags"""
  tags: [String]

  """Direct url to the environment"""
  url: String

  """"""
  users: [UserRef]

  """"""
  teams: [TeamRef]
}

""""""
input VulnerabilityDetailOrder {
  """"""
  asc: VulnerabilityDetailOrderable

  """"""
  desc: VulnerabilityDetailOrderable

  """"""
  then: VulnerabilityDetailOrder
}

"""Vulnerability detail"""
type VulnerabilityDetail {
  """Link to the vulnerability"""
  vulnerability(filter: VulnerabilityFilter): Vulnerability!

  """Title"""
  title: String

  """Summary"""
  summary: String

  """Date the vulnerability became public"""
  datePublic: DateTime

  """Collection"""
  collectionURL: String

  """Default status such as affected"""
  defaultStatus: String

  """List of descriptions"""
  descriptions: [String]

  """List of modules affected"""
  modules: [String]

  """List of program files affected"""
  programFiles: [String]

  """List of program routines affected"""
  programRoutines: [String]

  """List of platforms affected"""
  platforms: [String]

  """Vulnerable versions"""
  versions(filter: VulnerabilityVersionStatusFilter, order: VulnerabilityVersionStatusOrder, first: Int, offset: Int): [VulnerabilityVersionStatus]

  """List of solutions to mitigate the vulnerability"""
  solutions: [String]

  """List of workarounds available"""
  workarounds: [String]

  """List of configurations to mitigate"""
  configurations: [String]

  """List of exploits"""
  exploits: [String]

  """List of timeline"""
  timeline: [String]

  """List of credits"""
  credits: [String]

  """List of references"""
  references: [String]

  """Source of the vulnerability detail such as NVD, GitHub"""
  source: String

  """"""
  versionsAggregate(filter: VulnerabilityVersionStatusFilter): VulnerabilityVersionStatusAggregateResult
}

""""""
input StringRegExpFilter_StringTermFilter {
  """"""
  regexp: String

  """"""
  allofterms: String

  """"""
  anyofterms: String
}

"""Represents an application version"""
type ApplicationVersion {
  """Branch name"""
  branch: String

  """Release name"""
  release: String

  """VCS Tag"""
  tag: String

  """VCS Commit Hash"""
  commit_sha: String
}

""""""
input PointListRef {
  """"""
  points: [PointRef!]!
}

""""""
input AddVulnerabilityAnalysisInput {
  """State such as exploitable"""
  state: String

  """Details for the state"""
  detail: String
}

""""""
type UpdatePropertiesPayload {
  """"""
  properties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """"""
  numUids: Int
}

""""""
input AddScanInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Boolean to represent if this scan was scheduled"""
  isScheduled: Boolean

  """"""
  invokedBy: UserRef

  """Creation date"""
  created: DateTime!

  """Optional validity date for this scan"""
  validUntil: DateTime

  """"""
  applications: [ApplicationRef]

  """List of custom tags"""
  tags: [String]

  """"""
  result: ScanResultRef

  """Direct link to the scan"""
  url: String
}

""""""
input BomServiceDataFilter {
  """"""
  has: [BomServiceDataHasFilter]

  """"""
  and: [BomServiceDataFilter]

  """"""
  or: [BomServiceDataFilter]

  """"""
  not: BomServiceDataFilter
}

""""""
input Severity_hash {
  """"""
  eq: Severity

  """"""
  in: [Severity]
}

""""""
input TeamRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """Team name"""
  name: String

  """Description of the team"""
  description: String

  """List of tags"""
  tags: [String]

  """"""
  users: [UserRef]

  """"""
  applications: [ApplicationRef]

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """Is this team disabled?"""
  disabled: Boolean
}

"""Represents an application"""
type Application {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Name of the application"""
  name: String!

  """Description"""
  description: String

  """Environment where this application is hosted or tested"""
  environment(filter: EnvironmentFilter): Environment

  """Version of the application"""
  version(filter: ApplicationVersionFilter): ApplicationVersion

  """URL of the repository"""
  repoUrl: String

  """URL to the issues tracking system such as GitHub issues or Jira"""
  issuesUrl: String

  """URL to the CI environment"""
  ciUrl: String

  """URL to the CD environment"""
  cdUrl: String

  """URL to the change management system used"""
  changeManagementUrl: String

  """
  List of programming languages used in the application, configurations and containers
  """
  languages: [String]

  """List of frameworks and SDKs"""
  frameworks: [String]

  """List of custom classification"""
  classification: [String]

  """List of tags"""
  tags: [String]

  """Creation date"""
  created: DateTime!

  """Modified date"""
  modified: DateTime!

  """List of teams"""
  teams(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """Is this application disabled?"""
  disabled: Boolean

  """"""
  teamsAggregate(filter: TeamFilter): TeamAggregateResult
}

""""""
input DateTimeFilter {
  """"""
  eq: DateTime

  """"""
  in: [DateTime]

  """"""
  le: DateTime

  """"""
  lt: DateTime

  """"""
  ge: DateTime

  """"""
  gt: DateTime

  """"""
  between: DateTimeRange
}

""""""
enum PropertiesOrderable {
  """"""
  name

  """"""
  value
}

""""""
input ComponentLicenseFilter {
  """"""
  id: StringHashFilter

  """"""
  has: [ComponentLicenseHasFilter]

  """"""
  and: [ComponentLicenseFilter]

  """"""
  or: [ComponentLicenseFilter]

  """"""
  not: ComponentLicenseFilter
}

""""""
input UserPatch {
  """Email"""
  email: String

  """Full name"""
  fullName: String

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """"""
  teams: [TeamRef]

  """"""
  roles: [UserRoleRef]

  """Is this user account disabled?"""
  disabled: Boolean

  """"""
  password: String
}

""""""
type UpdateBomServicePayload {
  """"""
  bomService(filter: BomServiceFilter, order: BomServiceOrder, first: Int, offset: Int): [BomService]

  """"""
  numUids: Int
}

""""""
input StringFullTextFilter_StringTermFilter {
  """"""
  alloftext: String

  """"""
  anyoftext: String

  """"""
  allofterms: String

  """"""
  anyofterms: String
}

""""""
input UpdateVulnerabilityAdvisoryInput {
  """"""
  filter: VulnerabilityAdvisoryFilter!

  """"""
  set: VulnerabilityAdvisoryPatch

  """"""
  remove: VulnerabilityAdvisoryPatch
}

""""""
input VulnerabilitySourceRef {
  """Name such as NVD, GitHub"""
  name: String

  """URL"""
  url: String
}

"""User"""
type User {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Email"""
  email: String!

  """Full name"""
  fullName: String!

  """Creation date"""
  created: DateTime!

  """Modified date"""
  modified: DateTime!

  """List of teams"""
  teams(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """List of roles"""
  roles(filter: UserRoleFilter, order: UserRoleOrder, first: Int, offset: Int): [UserRole]

  """Is this user account disabled?"""
  disabled: Boolean

  """"""
  teamsAggregate(filter: TeamFilter): TeamAggregateResult

  """"""
  rolesAggregate(filter: UserRoleFilter): UserRoleAggregateResult
}

""""""
enum DgraphIndex {
  """"""
  int

  """"""
  int64

  """"""
  float

  """"""
  bool

  """"""
  hash

  """"""
  exact

  """"""
  term

  """"""
  fulltext

  """"""
  trigram

  """"""
  regexp

  """"""
  year

  """"""
  month

  """"""
  day

  """"""
  hour

  """"""
  geo
}

""""""
input PolygonRef {
  """"""
  coordinates: [PointListRef!]!
}

""""""
type DeleteVulnerabilityRatingPayload {
  """"""
  vulnerabilityRating(filter: VulnerabilityRatingFilter, order: VulnerabilityRatingOrder, first: Int, offset: Int): [VulnerabilityRating]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateComponentPayload {
  """"""
  component(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """"""
  numUids: Int
}

""""""
enum VulnerabilityVersionStatusHasFilter {
  """"""
  version

  """"""
  versionType

  """"""
  repo

  """"""
  lessThanOrEqual

  """"""
  lessThan

  """"""
  changes

  """"""
  status
}

""""""
input ApplicationVersionOrder {
  """"""
  asc: ApplicationVersionOrderable

  """"""
  desc: ApplicationVersionOrderable

  """"""
  then: ApplicationVersionOrder
}

""""""
input VulnerabilityDetailRef {
  """"""
  vulnerability: VulnerabilityRef

  """Title"""
  title: String

  """Summary"""
  summary: String

  """Date the vulnerability became public"""
  datePublic: DateTime

  """Collection"""
  collectionURL: String

  """Default status such as affected"""
  defaultStatus: String

  """List of descriptions"""
  descriptions: [String]

  """List of modules affected"""
  modules: [String]

  """List of program files affected"""
  programFiles: [String]

  """List of program routines affected"""
  programRoutines: [String]

  """List of platforms affected"""
  platforms: [String]

  """"""
  versions: [VulnerabilityVersionStatusRef]

  """List of solutions to mitigate the vulnerability"""
  solutions: [String]

  """List of workarounds available"""
  workarounds: [String]

  """List of configurations to mitigate"""
  configurations: [String]

  """List of exploits"""
  exploits: [String]

  """List of timeline"""
  timeline: [String]

  """List of credits"""
  credits: [String]

  """List of references"""
  references: [String]

  """Source of the vulnerability detail such as NVD, GitHub"""
  source: String
}

""""""
input VulnerabilityRatingOrder {
  """"""
  asc: VulnerabilityRatingOrderable

  """"""
  desc: VulnerabilityRatingOrderable

  """"""
  then: VulnerabilityRatingOrder
}

"""Bom type"""
type Bom {
  """Serial number"""
  serialNumber: String!

  """BoM Metadata"""
  metadata(filter: BomMetadataFilter): BomMetadata

  """List of components"""
  components(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component!]!

  """List of services"""
  services(filter: BomServiceFilter, order: BomServiceOrder, first: Int, offset: Int): [BomService]

  """Application for this BoM"""
  application(filter: ApplicationFilter): Application

  """Scan that uses this BoM"""
  scan(filter: ScanFilter): Scan

  """List of vulnerabilities"""
  vulnerabilities(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """"""
  componentsAggregate(filter: ComponentFilter): ComponentAggregateResult

  """"""
  servicesAggregate(filter: BomServiceFilter): BomServiceAggregateResult

  """"""
  vulnerabilitiesAggregate(filter: VulnerabilityFilter): VulnerabilityAggregateResult
}

"""Vulnerability analysis"""
type VulnerabilityAnalysis {
  """State such as exploitable"""
  state: String

  """Details for the state"""
  detail: String
}

""""""
type AddScanPayload {
  """"""
  scan(filter: ScanFilter, order: ScanOrder, first: Int, offset: Int): [Scan]

  """"""
  numUids: Int
}

""""""
type BomServiceAggregateResult {
  """"""
  count: Int

  """"""
  bomRefMin: String

  """"""
  bomRefMax: String

  """"""
  groupMin: String

  """"""
  groupMax: String

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  versionMin: String

  """"""
  versionMax: String

  """"""
  descriptionMin: String

  """"""
  descriptionMax: String
}

""""""
type UpdateVulnerabilityPayload {
  """"""
  vulnerability(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """"""
  numUids: Int
}

""""""
input EnvironmentOrder {
  """"""
  asc: EnvironmentOrderable

  """"""
  desc: EnvironmentOrderable

  """"""
  then: EnvironmentOrder
}

""""""
input TeamFilter {
  """"""
  id: StringHashFilter

  """"""
  name: StringTermFilter

  """"""
  description: StringFullTextFilter_StringTermFilter

  """"""
  created: DateTimeFilter

  """"""
  modified: DateTimeFilter

  """"""
  has: [TeamHasFilter]

  """"""
  and: [TeamFilter]

  """"""
  or: [TeamFilter]

  """"""
  not: TeamFilter
}

""""""
input UpdateVulnerabilityAnalysisInput {
  """"""
  filter: VulnerabilityAnalysisFilter!

  """"""
  set: VulnerabilityAnalysisPatch

  """"""
  remove: VulnerabilityAnalysisPatch
}

""""""
input VulnerabilityPatch {
  """ID such as CVE or GHSA id"""
  id: String

  """"""
  source: VulnerabilitySourceRef

  """"""
  ratings: [VulnerabilityRatingRef]

  """Default severity"""
  severity: Severity

  """Default CVSS scores"""
  cvss_score: Float

  """List of CWE"""
  cwes: [Int]

  """Description"""
  description: String

  """Recommendation"""
  recommendation: String

  """"""
  advisories: [VulnerabilityAdvisoryRef]

  """"""
  analysis: VulnerabilityAnalysisRef

  """"""
  affects: [ComponentRef]

  """Affected version"""
  version: String

  """Fix version"""
  fix_version: String

  """"""
  properties: [PropertiesRef]

  """"""
  detail: VulnerabilityDetailRef
}

""""""
type AddBomPayload {
  """"""
  bom(filter: BomFilter, order: BomOrder, first: Int, offset: Int): [Bom]

  """"""
  numUids: Int
}

""""""
type AddVulnerabilityRatingPayload {
  """"""
  vulnerabilityRating(filter: VulnerabilityRatingFilter, order: VulnerabilityRatingOrder, first: Int, offset: Int): [VulnerabilityRating]

  """"""
  numUids: Int
}

""""""
type DeleteComponentPayload {
  """"""
  component(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type DeleteUserPayload {
  """"""
  user(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type ScanAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  createdMin: DateTime

  """"""
  createdMax: DateTime

  """"""
  validUntilMin: DateTime

  """"""
  validUntilMax: DateTime

  """"""
  urlMin: String

  """"""
  urlMax: String
}

""""""
type UpdateBomMetadataPayload {
  """"""
  bomMetadata(filter: BomMetadataFilter, order: BomMetadataOrder, first: Int, offset: Int): [BomMetadata]

  """"""
  numUids: Int
}

""""""
type VulnerabilityVersionChangesAggregateResult {
  """"""
  count: Int

  """"""
  atMin: String

  """"""
  atMax: String
}

""""""
input AddVulnerabilitySourceInput {
  """Name such as NVD, GitHub"""
  name: String

  """URL"""
  url: String
}

""""""
input AddVulnerabilityVersionStatusInput {
  """Version string"""
  version: String!

  """Version type such as semver"""
  versionType: String

  """Repository"""
  repo: String

  """"""
  lessThanOrEqual: String

  """"""
  lessThan: String

  """"""
  changes: [VulnerabilityVersionChangesRef]

  """Status"""
  status: VulnerabilityVersionStatusEnum!
}

"""Team"""
type Team {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Team name"""
  name: String!

  """Description of the team"""
  description: String

  """List of tags"""
  tags: [String]

  """List of users"""
  users(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]

  """List of applications"""
  applications(filter: ApplicationFilter, order: ApplicationOrder, first: Int, offset: Int): [Application]

  """Creation date"""
  created: DateTime!

  """Modified date"""
  modified: DateTime!

  """Is this team disabled?"""
  disabled: Boolean

  """"""
  usersAggregate(filter: UserFilter): UserAggregateResult

  """"""
  applicationsAggregate(filter: ApplicationFilter): ApplicationAggregateResult
}

"""Scan of an application"""
type Scan {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Boolean to represent if this scan was scheduled"""
  isScheduled: Boolean

  """User who invoked this scan if manual"""
  invokedBy(filter: UserFilter): User

  """Creation date"""
  created: DateTime!

  """Optional validity date for this scan"""
  validUntil: DateTime

  """List of applications scanned"""
  applications(filter: ApplicationFilter, order: ApplicationOrder, first: Int, offset: Int): [Application]

  """List of custom tags"""
  tags: [String]

  """Link to a scan result"""
  result(filter: ScanResultFilter): ScanResult

  """Direct link to the scan"""
  url: String

  """"""
  applicationsAggregate(filter: ApplicationFilter): ApplicationAggregateResult
}

""""""
input PointGeoFilter {
  """"""
  near: NearFilter

  """"""
  within: WithinFilter
}

""""""
input AddVulnerabilityInput {
  """Unique reference within a BoM"""
  bomRef: String!

  """ID such as CVE or GHSA id"""
  id: String!

  """"""
  source: VulnerabilitySourceRef

  """"""
  ratings: [VulnerabilityRatingRef]

  """Default severity"""
  severity: Severity!

  """Default CVSS scores"""
  cvss_score: Float!

  """List of CWE"""
  cwes: [Int]

  """Description"""
  description: String

  """Recommendation"""
  recommendation: String

  """"""
  advisories: [VulnerabilityAdvisoryRef]

  """"""
  analysis: VulnerabilityAnalysisRef

  """"""
  affects: [ComponentRef]

  """Affected version"""
  version: String!

  """Fix version"""
  fix_version: String

  """"""
  properties: [PropertiesRef]

  """"""
  detail: VulnerabilityDetailRef
}

""""""
input UserFilter {
  """"""
  id: StringHashFilter

  """"""
  email: StringTermFilter

  """"""
  fullName: StringFullTextFilter_StringTermFilter

  """"""
  created: DateTimeFilter

  """"""
  modified: DateTimeFilter

  """"""
  has: [UserHasFilter]

  """"""
  and: [UserFilter]

  """"""
  or: [UserFilter]

  """"""
  not: UserFilter
}

""""""
input UserRoleFilter {
  """"""
  id: StringHashFilter

  """"""
  has: [UserRoleHasFilter]

  """"""
  and: [UserRoleFilter]

  """"""
  or: [UserRoleFilter]

  """"""
  not: UserRoleFilter
}

"""Vulnerability Rating"""
type VulnerabilityRating {
  """Severity such as critical, high"""
  severity: Severity!

  """Score"""
  score: Float!

  """Method used to determine the score"""
  method: String
}

""""""
type DeleteVulnerabilityDetailPayload {
  """"""
  vulnerabilityDetail(filter: VulnerabilityDetailFilter, order: VulnerabilityDetailOrder, first: Int, offset: Int): [VulnerabilityDetail]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
enum UserOrderable {
  """"""
  id

  """"""
  email

  """"""
  fullName

  """"""
  created

  """"""
  modified
}

""""""
input ApplicationPatch {
  """Name of the application"""
  name: String

  """Description"""
  description: String

  """"""
  environment: EnvironmentRef

  """"""
  version: ApplicationVersionRef

  """URL of the repository"""
  repoUrl: String

  """URL to the issues tracking system such as GitHub issues or Jira"""
  issuesUrl: String

  """URL to the CI environment"""
  ciUrl: String

  """URL to the CD environment"""
  cdUrl: String

  """URL to the change management system used"""
  changeManagementUrl: String

  """
  List of programming languages used in the application, configurations and containers
  """
  languages: [String]

  """List of frameworks and SDKs"""
  frameworks: [String]

  """List of custom classification"""
  classification: [String]

  """List of tags"""
  tags: [String]

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """"""
  teams: [TeamRef]

  """Is this application disabled?"""
  disabled: Boolean
}

""""""
type DeleteVulnerabilityVersionStatusPayload {
  """"""
  vulnerabilityVersionStatus(filter: VulnerabilityVersionStatusFilter, order: VulnerabilityVersionStatusOrder, first: Int, offset: Int): [VulnerabilityVersionStatus]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type UpdateUserRolePayload {
  """"""
  userRole(filter: UserRoleFilter, order: UserRoleOrder, first: Int, offset: Int): [UserRole]

  """"""
  numUids: Int
}

""""""
type UserAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  emailMin: String

  """"""
  emailMax: String

  """"""
  fullNameMin: String

  """"""
  fullNameMax: String

  """"""
  createdMin: DateTime

  """"""
  createdMax: DateTime

  """"""
  modifiedMin: DateTime

  """"""
  modifiedMax: DateTime
}

""""""
enum BomMetadataHasFilter {
  """"""
  timestamp

  """"""
  component
}

""""""
enum UserHasFilter {
  """"""
  id

  """"""
  email

  """"""
  fullName

  """"""
  created

  """"""
  modified

  """"""
  teams

  """"""
  roles

  """"""
  disabled
}

""""""
input AddApplicationVersionInput {
  """Branch name"""
  branch: String

  """Release name"""
  release: String

  """VCS Tag"""
  tag: String

  """VCS Commit Hash"""
  commit_sha: String
}

""""""
input ApplicationVersionFilter {
  """"""
  has: [ApplicationVersionHasFilter]

  """"""
  and: [ApplicationVersionFilter]

  """"""
  or: [ApplicationVersionFilter]

  """"""
  not: ApplicationVersionFilter
}

""""""
input BomServiceDataPatch {
  """Data name"""
  data: String

  """Flow of data - inbound, outbound etc"""
  flow: [String]

  """Classification of data"""
  classification: [String]
}

""""""
input UpdateVulnerabilityInput {
  """"""
  filter: VulnerabilityFilter!

  """"""
  set: VulnerabilityPatch

  """"""
  remove: VulnerabilityPatch
}

"""Status of a specific vulnerability version"""
enum VulnerabilityVersionStatusEnum {
  """"""
  affected

  """"""
  unaffected
}

""""""
type UpdateUserPayload {
  """"""
  user(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]

  """"""
  numUids: Int
}

""""""
input UpdateComponentInput {
  """"""
  filter: ComponentFilter!

  """"""
  set: ComponentPatch

  """"""
  remove: ComponentPatch
}

""""""
input VulnerabilityAdvisoryRef {
  """Title"""
  title: String

  """URL to the advisory"""
  url: String
}

""""""
input StringExactFilter {
  """"""
  eq: String

  """"""
  in: [String]

  """"""
  le: String

  """"""
  lt: String

  """"""
  ge: String

  """"""
  gt: String

  """"""
  between: StringRange
}

""""""
enum ComponentHasFilter {
  """"""
  isRoot

  """"""
  bomRef

  """"""
  group

  """"""
  name

  """"""
  description

  """"""
  ctype

  """"""
  subPath

  """"""
  repoUrl

  """"""
  downloadUrl

  """"""
  publisher

  """"""
  licenses

  """"""
  scope

  """"""
  version

  """"""
  purl

  """"""
  vulnerabilities

  """"""
  properties

  """"""
  dependency

  """"""
  appearsIn
}

""""""
enum VulnerabilityAnalysisOrderable {
  """"""
  state

  """"""
  detail
}

""""""
input BomMetadataRef {
  """Creation Timestamp"""
  timestamp: DateTime

  """"""
  component: ComponentRef
}

""""""
input VulnerabilityVersionChangesRef {
  """"""
  at: String

  """"""
  status: VulnerabilityVersionStatusEnum
}

""""""
enum VulnerabilityAdvisoryOrderable {
  """"""
  title

  """"""
  url
}

""""""
input BomMetadataPatch {
  """Creation Timestamp"""
  timestamp: DateTime

  """"""
  component: ComponentRef
}

""""""
input BomServiceDataOrder {
  """"""
  asc: BomServiceDataOrderable

  """"""
  desc: BomServiceDataOrderable

  """"""
  then: BomServiceDataOrder
}

""""""
input UpdateVulnerabilityDetailInput {
  """"""
  filter: VulnerabilityDetailFilter!

  """"""
  set: VulnerabilityDetailPatch

  """"""
  remove: VulnerabilityDetailPatch
}

""""""
input VulnerabilityRef {
  """Unique reference within a BoM"""
  bomRef: String

  """ID such as CVE or GHSA id"""
  id: String

  """"""
  source: VulnerabilitySourceRef

  """"""
  ratings: [VulnerabilityRatingRef]

  """Default severity"""
  severity: Severity

  """Default CVSS scores"""
  cvss_score: Float

  """List of CWE"""
  cwes: [Int]

  """Description"""
  description: String

  """Recommendation"""
  recommendation: String

  """"""
  advisories: [VulnerabilityAdvisoryRef]

  """"""
  analysis: VulnerabilityAnalysisRef

  """"""
  affects: [ComponentRef]

  """Affected version"""
  version: String

  """Fix version"""
  fix_version: String

  """"""
  properties: [PropertiesRef]

  """"""
  detail: VulnerabilityDetailRef
}

""""""
input MultiPolygonRef {
  """"""
  polygons: [PolygonRef!]!
}

""""""
type AddApplicationVersionPayload {
  """"""
  applicationVersion(filter: ApplicationVersionFilter, order: ApplicationVersionOrder, first: Int, offset: Int): [ApplicationVersion]

  """"""
  numUids: Int
}

""""""
type AddVulnerabilityAdvisoryPayload {
  """"""
  vulnerabilityAdvisory(filter: VulnerabilityAdvisoryFilter, order: VulnerabilityAdvisoryOrder, first: Int, offset: Int): [VulnerabilityAdvisory]

  """"""
  numUids: Int
}

""""""
input ApplicationVersionRef {
  """Branch name"""
  branch: String

  """Release name"""
  release: String

  """VCS Tag"""
  tag: String

  """VCS Commit Hash"""
  commit_sha: String
}

""""""
input UserRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """Email"""
  email: String

  """Full name"""
  fullName: String

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """"""
  teams: [TeamRef]

  """"""
  roles: [UserRoleRef]

  """Is this user account disabled?"""
  disabled: Boolean

  """"""
  password: String
}

""""""
input VulnerabilityVersionStatusRef {
  """Version string"""
  version: String

  """Version type such as semver"""
  versionType: String

  """Repository"""
  repo: String

  """"""
  lessThanOrEqual: String

  """"""
  lessThan: String

  """"""
  changes: [VulnerabilityVersionChangesRef]

  """Status"""
  status: VulnerabilityVersionStatusEnum
}

""""""
type ComponentLicenseAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  textMin: String

  """"""
  textMax: String

  """"""
  urlMin: String

  """"""
  urlMax: String

  """"""
  expressionMin: String

  """"""
  expressionMax: String
}

""""""
type ScanResultAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  createdMin: DateTime

  """"""
  createdMax: DateTime

  """"""
  validUntilMin: DateTime

  """"""
  validUntilMax: DateTime

  """"""
  urlMin: String

  """"""
  urlMax: String

  """"""
  htmlUrlMin: String

  """"""
  htmlUrlMax: String

  """"""
  csvUrlMin: String

  """"""
  csvUrlMax: String

  """"""
  pdfUrlMin: String

  """"""
  pdfUrlMax: String
}

""""""
input AddApplicationInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Name of the application"""
  name: String!

  """Description"""
  description: String

  """"""
  environment: EnvironmentRef

  """"""
  version: ApplicationVersionRef

  """URL of the repository"""
  repoUrl: String

  """URL to the issues tracking system such as GitHub issues or Jira"""
  issuesUrl: String

  """URL to the CI environment"""
  ciUrl: String

  """URL to the CD environment"""
  cdUrl: String

  """URL to the change management system used"""
  changeManagementUrl: String

  """
  List of programming languages used in the application, configurations and containers
  """
  languages: [String]

  """List of frameworks and SDKs"""
  frameworks: [String]

  """List of custom classification"""
  classification: [String]

  """List of tags"""
  tags: [String]

  """Creation date"""
  created: DateTime!

  """Modified date"""
  modified: DateTime!

  """"""
  teams: [TeamRef]

  """Is this application disabled?"""
  disabled: Boolean
}

""""""
input AddUserInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """Email"""
  email: String!

  """Full name"""
  fullName: String!

  """Creation date"""
  created: DateTime!

  """Modified date"""
  modified: DateTime!

  """"""
  teams: [TeamRef]

  """"""
  roles: [UserRoleRef]

  """Is this user account disabled?"""
  disabled: Boolean

  """"""
  password: String!
}

""""""
input AddVulnerabilityAdvisoryInput {
  """Title"""
  title: String

  """URL to the advisory"""
  url: String
}

""""""
input UserOrder {
  """"""
  asc: UserOrderable

  """"""
  desc: UserOrderable

  """"""
  then: UserOrder
}

""""""
input UserRoleRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """"""
  user: UserRef

  """"""
  team: TeamRef

  """Role string. Example: administrator, developer, security"""
  role: String

  """Creation date"""
  created: DateTime

  """Modified date"""
  modified: DateTime

  """Is this role disabled?"""
  disabled: Boolean
}

""""""
input VulnerabilitySourceOrder {
  """"""
  asc: VulnerabilitySourceOrderable

  """"""
  desc: VulnerabilitySourceOrderable

  """"""
  then: VulnerabilitySourceOrder
}

""""""
input FloatRange {
  """"""
  min: Float!

  """"""
  max: Float!
}

""""""
type AddEnvironmentPayload {
  """"""
  environment(filter: EnvironmentFilter, order: EnvironmentOrder, first: Int, offset: Int): [Environment]

  """"""
  numUids: Int
}

""""""
input ApplicationFilter {
  """"""
  id: StringHashFilter

  """"""
  name: StringRegExpFilter_StringTermFilter

  """"""
  description: StringFullTextFilter_StringTermFilter

  """"""
  created: DateTimeFilter

  """"""
  modified: DateTimeFilter

  """"""
  has: [ApplicationHasFilter]

  """"""
  and: [ApplicationFilter]

  """"""
  or: [ApplicationFilter]

  """"""
  not: ApplicationFilter
}

""""""
input ScanRef {
  """Unique ID such as UUID or ULID"""
  id: String

  """Boolean to represent if this scan was scheduled"""
  isScheduled: Boolean

  """"""
  invokedBy: UserRef

  """Creation date"""
  created: DateTime

  """Optional validity date for this scan"""
  validUntil: DateTime

  """"""
  applications: [ApplicationRef]

  """List of custom tags"""
  tags: [String]

  """"""
  result: ScanResultRef

  """Direct link to the scan"""
  url: String
}

""""""
input IntRange {
  """"""
  min: Int!

  """"""
  max: Int!
}

""""""
type BomMetadataAggregateResult {
  """"""
  count: Int

  """"""
  timestampMin: DateTime

  """"""
  timestampMax: DateTime
}

""""""
enum BomServiceDataOrderable {
  """"""
  data
}

""""""
input ScanResultOrder {
  """"""
  asc: ScanResultOrderable

  """"""
  desc: ScanResultOrderable

  """"""
  then: ScanResultOrder
}

""""""
input UpdateUserInput {
  """"""
  filter: UserFilter!

  """"""
  set: UserPatch

  """"""
  remove: UserPatch
}

""""""
input VulnerabilityDetailFilter {
  """"""
  title: StringTermFilter

  """"""
  summary: StringFullTextFilter_StringTermFilter

  """"""
  has: [VulnerabilityDetailHasFilter]

  """"""
  and: [VulnerabilityDetailFilter]

  """"""
  or: [VulnerabilityDetailFilter]

  """"""
  not: VulnerabilityDetailFilter
}

""""""
type AddScanResultPayload {
  """"""
  scanResult(filter: ScanResultFilter, order: ScanResultOrder, first: Int, offset: Int): [ScanResult]

  """"""
  numUids: Int
}

""""""
type DeleteVulnerabilitySourcePayload {
  """"""
  vulnerabilitySource(filter: VulnerabilitySourceFilter, order: VulnerabilitySourceOrder, first: Int, offset: Int): [VulnerabilitySource]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
input AddBomInput {
  """Serial number"""
  serialNumber: String!

  """"""
  metadata: BomMetadataRef

  """"""
  components: [ComponentRef!]!

  """"""
  services: [BomServiceRef]

  """"""
  application: ApplicationRef

  """"""
  scan: ScanRef

  """"""
  vulnerabilities: [VulnerabilityRef]
}

""""""
type Query {
  """"""
  getUser(id: String!): User

  """"""
  checkUserPassword(id: String!, password: String!): User

  """"""
  queryUser(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]

  """"""
  aggregateUser(filter: UserFilter): UserAggregateResult

  """"""
  getTeam(id: String!): Team

  """"""
  queryTeam(filter: TeamFilter, order: TeamOrder, first: Int, offset: Int): [Team]

  """"""
  aggregateTeam(filter: TeamFilter): TeamAggregateResult

  """"""
  getUserRole(id: String!): UserRole

  """"""
  queryUserRole(filter: UserRoleFilter, order: UserRoleOrder, first: Int, offset: Int): [UserRole]

  """"""
  aggregateUserRole(filter: UserRoleFilter): UserRoleAggregateResult

  """"""
  getScanResult(id: String!): ScanResult

  """"""
  queryScanResult(filter: ScanResultFilter, order: ScanResultOrder, first: Int, offset: Int): [ScanResult]

  """"""
  aggregateScanResult(filter: ScanResultFilter): ScanResultAggregateResult

  """"""
  getScan(id: String!): Scan

  """"""
  queryScan(filter: ScanFilter, order: ScanOrder, first: Int, offset: Int): [Scan]

  """"""
  aggregateScan(filter: ScanFilter): ScanAggregateResult

  """"""
  getEnvironment(id: String!): Environment

  """"""
  queryEnvironment(filter: EnvironmentFilter, order: EnvironmentOrder, first: Int, offset: Int): [Environment]

  """"""
  aggregateEnvironment(filter: EnvironmentFilter): EnvironmentAggregateResult

  """"""
  queryApplicationVersion(filter: ApplicationVersionFilter, order: ApplicationVersionOrder, first: Int, offset: Int): [ApplicationVersion]

  """"""
  aggregateApplicationVersion(filter: ApplicationVersionFilter): ApplicationVersionAggregateResult

  """"""
  getApplication(id: String!): Application

  """"""
  queryApplication(filter: ApplicationFilter, order: ApplicationOrder, first: Int, offset: Int): [Application]

  """"""
  aggregateApplication(filter: ApplicationFilter): ApplicationAggregateResult

  """"""
  queryProperties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """"""
  aggregateProperties(filter: PropertiesFilter): PropertiesAggregateResult

  """"""
  queryBomMetadata(filter: BomMetadataFilter, order: BomMetadataOrder, first: Int, offset: Int): [BomMetadata]

  """"""
  aggregateBomMetadata(filter: BomMetadataFilter): BomMetadataAggregateResult

  """"""
  queryComponentLicense(filter: ComponentLicenseFilter, order: ComponentLicenseOrder, first: Int, offset: Int): [ComponentLicense]

  """"""
  aggregateComponentLicense(filter: ComponentLicenseFilter): ComponentLicenseAggregateResult

  """"""
  getComponent(purl: String!): Component

  """"""
  queryComponent(filter: ComponentFilter, order: ComponentOrder, first: Int, offset: Int): [Component]

  """"""
  aggregateComponent(filter: ComponentFilter): ComponentAggregateResult

  """"""
  queryBomServiceData(filter: BomServiceDataFilter, order: BomServiceDataOrder, first: Int, offset: Int): [BomServiceData]

  """"""
  aggregateBomServiceData(filter: BomServiceDataFilter): BomServiceDataAggregateResult

  """"""
  queryBomService(filter: BomServiceFilter, order: BomServiceOrder, first: Int, offset: Int): [BomService]

  """"""
  aggregateBomService(filter: BomServiceFilter): BomServiceAggregateResult

  """"""
  getBom(serialNumber: String!): Bom

  """"""
  queryBom(filter: BomFilter, order: BomOrder, first: Int, offset: Int): [Bom]

  """"""
  aggregateBom(filter: BomFilter): BomAggregateResult

  """"""
  queryVulnerabilityVersionChanges(filter: VulnerabilityVersionChangesFilter, order: VulnerabilityVersionChangesOrder, first: Int, offset: Int): [VulnerabilityVersionChanges]

  """"""
  aggregateVulnerabilityVersionChanges(filter: VulnerabilityVersionChangesFilter): VulnerabilityVersionChangesAggregateResult

  """"""
  queryVulnerabilityVersionStatus(filter: VulnerabilityVersionStatusFilter, order: VulnerabilityVersionStatusOrder, first: Int, offset: Int): [VulnerabilityVersionStatus]

  """"""
  aggregateVulnerabilityVersionStatus(filter: VulnerabilityVersionStatusFilter): VulnerabilityVersionStatusAggregateResult

  """"""
  queryVulnerabilityDetail(filter: VulnerabilityDetailFilter, order: VulnerabilityDetailOrder, first: Int, offset: Int): [VulnerabilityDetail]

  """"""
  aggregateVulnerabilityDetail(filter: VulnerabilityDetailFilter): VulnerabilityDetailAggregateResult

  """"""
  queryVulnerabilitySource(filter: VulnerabilitySourceFilter, order: VulnerabilitySourceOrder, first: Int, offset: Int): [VulnerabilitySource]

  """"""
  aggregateVulnerabilitySource(filter: VulnerabilitySourceFilter): VulnerabilitySourceAggregateResult

  """"""
  queryVulnerabilityAdvisory(filter: VulnerabilityAdvisoryFilter, order: VulnerabilityAdvisoryOrder, first: Int, offset: Int): [VulnerabilityAdvisory]

  """"""
  aggregateVulnerabilityAdvisory(filter: VulnerabilityAdvisoryFilter): VulnerabilityAdvisoryAggregateResult

  """"""
  queryVulnerabilityRating(filter: VulnerabilityRatingFilter, order: VulnerabilityRatingOrder, first: Int, offset: Int): [VulnerabilityRating]

  """"""
  aggregateVulnerabilityRating(filter: VulnerabilityRatingFilter): VulnerabilityRatingAggregateResult

  """"""
  queryVulnerabilityAnalysis(filter: VulnerabilityAnalysisFilter, order: VulnerabilityAnalysisOrder, first: Int, offset: Int): [VulnerabilityAnalysis]

  """"""
  aggregateVulnerabilityAnalysis(filter: VulnerabilityAnalysisFilter): VulnerabilityAnalysisAggregateResult

  """"""
  getVulnerability(bomRef: String!): Vulnerability

  """"""
  queryVulnerability(filter: VulnerabilityFilter, order: VulnerabilityOrder, first: Int, offset: Int): [Vulnerability]

  """"""
  aggregateVulnerability(filter: VulnerabilityFilter): VulnerabilityAggregateResult
}

""""""
type DeleteEnvironmentPayload {
  """"""
  environment(filter: EnvironmentFilter, order: EnvironmentOrder, first: Int, offset: Int): [Environment]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
enum BomHasFilter {
  """"""
  serialNumber

  """"""
  metadata

  """"""
  components

  """"""
  services

  """"""
  application

  """"""
  scan

  """"""
  vulnerabilities
}

""""""
input AddPropertiesInput {
  """Property name"""
  name: String!

  """Property value"""
  value: String!
}

""""""
input ComponentOrder {
  """"""
  asc: ComponentOrderable

  """"""
  desc: ComponentOrderable

  """"""
  then: ComponentOrder
}

""""""
input WithinFilter {
  """"""
  polygon: PolygonRef!
}

""""""
type UpdateVulnerabilityRatingPayload {
  """"""
  vulnerabilityRating(filter: VulnerabilityRatingFilter, order: VulnerabilityRatingOrder, first: Int, offset: Int): [VulnerabilityRating]

  """"""
  numUids: Int
}

""""""
input BomPatch {
  """"""
  metadata: BomMetadataRef

  """"""
  components: [ComponentRef!]

  """"""
  services: [BomServiceRef]

  """"""
  application: ApplicationRef

  """"""
  scan: ScanRef

  """"""
  vulnerabilities: [VulnerabilityRef]
}

""""""
input VulnerabilityVersionChangesPatch {
  """"""
  at: String

  """"""
  status: VulnerabilityVersionStatusEnum
}

"""Severity of the vulnerability"""
enum Severity {
  """"""
  critical

  """"""
  high

  """"""
  medium

  """"""
  low

  """"""
  info

  """"""
  none

  """"""
  unknown
}

"""Advisory"""
type VulnerabilityAdvisory {
  """Title"""
  title: String

  """URL to the advisory"""
  url: String
}

""""""
enum VulnerabilitySourceHasFilter {
  """"""
  name

  """"""
  url
}

""""""
input VulnerabilityDetailPatch {
  """"""
  vulnerability: VulnerabilityRef

  """Title"""
  title: String

  """Summary"""
  summary: String

  """Date the vulnerability became public"""
  datePublic: DateTime

  """Collection"""
  collectionURL: String

  """Default status such as affected"""
  defaultStatus: String

  """List of descriptions"""
  descriptions: [String]

  """List of modules affected"""
  modules: [String]

  """List of program files affected"""
  programFiles: [String]

  """List of program routines affected"""
  programRoutines: [String]

  """List of platforms affected"""
  platforms: [String]

  """"""
  versions: [VulnerabilityVersionStatusRef]

  """List of solutions to mitigate the vulnerability"""
  solutions: [String]

  """List of workarounds available"""
  workarounds: [String]

  """List of configurations to mitigate"""
  configurations: [String]

  """List of exploits"""
  exploits: [String]

  """List of timeline"""
  timeline: [String]

  """List of credits"""
  credits: [String]

  """List of references"""
  references: [String]

  """Source of the vulnerability detail such as NVD, GitHub"""
  source: String
}

""""""
input ContainsFilter {
  """"""
  point: PointRef

  """"""
  polygon: PolygonRef
}

""""""
type DeleteScanResultPayload {
  """"""
  scanResult(filter: ScanResultFilter, order: ScanResultOrder, first: Int, offset: Int): [ScanResult]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type VulnerabilityRatingAggregateResult {
  """"""
  count: Int

  """"""
  scoreMin: Float

  """"""
  scoreMax: Float

  """"""
  scoreSum: Float

  """"""
  scoreAvg: Float

  """"""
  methodMin: String

  """"""
  methodMax: String
}

""""""
enum UserRoleHasFilter {
  """"""
  id

  """"""
  user

  """"""
  team

  """"""
  role

  """"""
  created

  """"""
  modified

  """"""
  disabled
}

""""""
input PropertiesFilter {
  """"""
  name: StringFullTextFilter_StringTermFilter

  """"""
  value: StringFullTextFilter_StringTermFilter

  """"""
  has: [PropertiesHasFilter]

  """"""
  and: [PropertiesFilter]

  """"""
  or: [PropertiesFilter]

  """"""
  not: PropertiesFilter
}

"""BoM Service"""
type BomService {
  """Unique Reference in this BoM"""
  bomRef: String!

  """Group"""
  group: String!

  """Service name"""
  name: String!

  """Service version"""
  version: String!

  """Description"""
  description: String

  """List of endpoints"""
  endpoints: [String]

  """Boolean to indicate if this endpoint is authenticated"""
  authenticated: Boolean

  """Boolean to indicate if this service is cross boundary"""
  xTrustBoundary: Boolean

  """List of service data"""
  data(filter: BomServiceDataFilter, order: BomServiceDataOrder, first: Int, offset: Int): [BomServiceData]

  """List of component licenses"""
  licenses(filter: ComponentLicenseFilter, order: ComponentLicenseOrder, first: Int, offset: Int): [ComponentLicense]

  """List of services"""
  services(filter: BomServiceFilter, order: BomServiceOrder, first: Int, offset: Int): [BomService]

  """List of properties"""
  properties(filter: PropertiesFilter, order: PropertiesOrder, first: Int, offset: Int): [Properties]

  """"""
  dataAggregate(filter: BomServiceDataFilter): BomServiceDataAggregateResult

  """"""
  licensesAggregate(filter: ComponentLicenseFilter): ComponentLicenseAggregateResult

  """"""
  servicesAggregate(filter: BomServiceFilter): BomServiceAggregateResult

  """"""
  propertiesAggregate(filter: PropertiesFilter): PropertiesAggregateResult
}

""""""
type AddVulnerabilityDetailPayload {
  """"""
  vulnerabilityDetail(filter: VulnerabilityDetailFilter, order: VulnerabilityDetailOrder, first: Int, offset: Int): [VulnerabilityDetail]

  """"""
  numUids: Int
}

""""""
enum VulnerabilityVersionStatusOrderable {
  """"""
  version

  """"""
  versionType

  """"""
  repo

  """"""
  lessThanOrEqual

  """"""
  lessThan
}

""""""
input BomMetadataFilter {
  """"""
  timestamp: DateTimeFilter

  """"""
  has: [BomMetadataHasFilter]

  """"""
  and: [BomMetadataFilter]

  """"""
  or: [BomMetadataFilter]

  """"""
  not: BomMetadataFilter
}

""""""
type MultiPolygon {
  """"""
  polygons: [Polygon!]!
}

""""""
type UpdateVulnerabilityDetailPayload {
  """"""
  vulnerabilityDetail(filter: VulnerabilityDetailFilter, order: VulnerabilityDetailOrder, first: Int, offset: Int): [VulnerabilityDetail]

  """"""
  numUids: Int
}

""""""
type UpdateVulnerabilityVersionChangesPayload {
  """"""
  vulnerabilityVersionChanges(filter: VulnerabilityVersionChangesFilter, order: VulnerabilityVersionChangesOrder, first: Int, offset: Int): [VulnerabilityVersionChanges]

  """"""
  numUids: Int
}

""""""
type VulnerabilityAnalysisAggregateResult {
  """"""
  count: Int

  """"""
  stateMin: String

  """"""
  stateMax: String

  """"""
  detailMin: String

  """"""
  detailMax: String
}

""""""
enum VulnerabilityDetailHasFilter {
  """"""
  vulnerability

  """"""
  title

  """"""
  summary

  """"""
  datePublic

  """"""
  collectionURL

  """"""
  defaultStatus

  """"""
  descriptions

  """"""
  modules

  """"""
  programFiles

  """"""
  programRoutines

  """"""
  platforms

  """"""
  versions

  """"""
  solutions

  """"""
  workarounds

  """"""
  configurations

  """"""
  exploits

  """"""
  timeline

  """"""
  credits

  """"""
  references

  """"""
  source
}

""""""
input AddScanResultInput {
  """Unique ID such as UUID or ULID"""
  id: String!

  """"""
  scan: ScanRef

  """Creation date"""
  created: DateTime!

  """Optional, validity for result before it is considered stale"""
  validUntil: DateTime

  """"""
  bom: [BomRef]

  """"""
  components: [ComponentRef]

  """"""
  vulnerabilities: [VulnerabilityRef]

  """"""
  prioritizedComponents: [ComponentRef]

  """"""
  prioritizedVulnerabilities: [VulnerabilityRef]

  """"""
  exploitableComponents: [ComponentRef]

  """"""
  exploitableVulnerabilities: [VulnerabilityRef]

  """"""
  ignoredComponents: [ComponentRef]

  """"""
  ignoredVulnerabilities: [VulnerabilityRef]

  """Direct url for this scan result"""
  url: String

  """Direct html report url for this scan result"""
  htmlUrl: String

  """Direct csv report url for this scan result"""
  csvUrl: String

  """Direct pdf report url for this scan result"""
  pdfUrl: String
}

""""""
input BomServiceRef {
  """Unique Reference in this BoM"""
  bomRef: String

  """Group"""
  group: String

  """Service name"""
  name: String

  """Service version"""
  version: String

  """Description"""
  description: String

  """List of endpoints"""
  endpoints: [String]

  """Boolean to indicate if this endpoint is authenticated"""
  authenticated: Boolean

  """Boolean to indicate if this service is cross boundary"""
  xTrustBoundary: Boolean

  """"""
  data: [BomServiceDataRef]

  """"""
  licenses: [ComponentLicenseRef]

  """"""
  services: [BomServiceRef]

  """"""
  properties: [PropertiesRef]
}

""""""
input UpdateBomServiceInput {
  """"""
  filter: BomServiceFilter!

  """"""
  set: BomServicePatch

  """"""
  remove: BomServicePatch
}

"""Properties"""
type Properties {
  """Property name"""
  name: String!

  """Property value"""
  value: String!
}

""""""
input GenerateQueryParams {
  """"""
  get: Boolean

  """"""
  query: Boolean

  """"""
  password: Boolean

  """"""
  aggregate: Boolean
}

""""""
type DeleteBomPayload {
  """"""
  bom(filter: BomFilter, order: BomOrder, first: Int, offset: Int): [Bom]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type AddVulnerabilityVersionChangesPayload {
  """"""
  vulnerabilityVersionChanges(filter: VulnerabilityVersionChangesFilter, order: VulnerabilityVersionChangesOrder, first: Int, offset: Int): [VulnerabilityVersionChanges]

  """"""
  numUids: Int
}

""""""
type DeleteComponentLicensePayload {
  """"""
  componentLicense(filter: ComponentLicenseFilter, order: ComponentLicenseOrder, first: Int, offset: Int): [ComponentLicense]

  """"""
  msg: String

  """"""
  numUids: Int
}

""""""
type TeamAggregateResult {
  """"""
  count: Int

  """"""
  idMin: String

  """"""
  idMax: String

  """"""
  nameMin: String

  """"""
  nameMax: String

  """"""
  descriptionMin: String

  """"""
  descriptionMax: String

  """"""
  createdMin: DateTime

  """"""
  createdMax: DateTime

  """"""
  modifiedMin: DateTime

  """"""
  modifiedMax: DateTime
}

""""""
enum VulnerabilityAdvisoryHasFilter {
  """"""
  title

  """"""
  url
}

""""""
input VulnerabilityAdvisoryFilter {
  """"""
  title: StringTermFilter

  """"""
  has: [VulnerabilityAdvisoryHasFilter]

  """"""
  and: [VulnerabilityAdvisoryFilter]

  """"""
  or: [VulnerabilityAdvisoryFilter]

  """"""
  not: VulnerabilityAdvisoryFilter
}

""""""
input VulnerabilityOrder {
  """"""
  asc: VulnerabilityOrderable

  """"""
  desc: VulnerabilityOrderable

  """"""
  then: VulnerabilityOrder
}

""""""
input VulnerabilityRatingRef {
  """Severity such as critical, high"""
  severity: Severity

  """Score"""
  score: Float

  """Method used to determine the score"""
  method: String
}
