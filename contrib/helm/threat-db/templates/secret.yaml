{{- if empty .Values.JWT_SECRET_KEY }}
apiVersion: v1
kind: Secret
metadata:
  name: "secret-map"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "JWT_SECRET_KEY") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "JWT_SECRET_KEY") | default (randAlphaNum 64 | b64enc) }}
  # generate 32 chars long random string, base64 encode it and then double-quote the result string.
  JWT_SECRET_KEY: {{ $jwtSecret | b64enc | quote }}
{{- end }}
